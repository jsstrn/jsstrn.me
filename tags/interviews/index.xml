<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>interviews on Jesstern</title><link>https://jsstrn.me/tags/interviews/</link><description>Recent content in interviews on Jesstern</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 05 Jan 2021 01:21:42 +0800</lastBuildDate><atom:link href="https://jsstrn.me/tags/interviews/index.xml" rel="self" type="application/rss+xml"/><item><title>Beware the lame interview question</title><link>https://jsstrn.me/blog/beware-lame-interview-question/</link><pubDate>Tue, 05 Jan 2021 01:21:42 +0800</pubDate><guid>https://jsstrn.me/blog/beware-lame-interview-question/</guid><description>This question is from Interview Cake.
var text = &amp;#34;outside&amp;#34;; function displayText() { console.log(text); var text = &amp;#34;inside&amp;#34;; } displayText(); What do you think will be output onto the console?
It&amp;rsquo;s not &amp;ldquo;outside&amp;rdquo;.
It&amp;rsquo;s not &amp;ldquo;inside&amp;rdquo; either.
The correct answer is undefined because of the hoisted variable.
Why it&amp;rsquo;s lame Actually, the correct answer should be, &amp;ldquo;Why are you writing code this way in the first place?&amp;rdquo;
The question is trying to test your understanding on variable hoisting when using the var keyword, but any decent programmer would know to use const or let instead of var.</description></item><item><title>Interview tips from StashAway</title><link>https://jsstrn.me/notes/interview-tips-stashaway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/interview-tips-stashaway/</guid><description>These are tips for the interview process from StashAway that are also applicable with other companies.
Do your research Make sure you really understand what we do before you write your cover letter or hop on a call with us. We want to know that you’re making an intentional decision to apply to be a part of our team.
Make sure your values align with ours While technical skills are non-negotiable, we also pay a lot of attention to whether you&amp;rsquo;ll be a good cultural fit for the team.</description></item><item><title>Practice with mock interviews on Pramp</title><link>https://jsstrn.me/notes/practice-mock-interviews-on-pramp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/practice-mock-interviews-on-pramp/</guid><description>In my opinion, the best way to practice for technical interviews is to do mock interviews with someone.
Pramp is the best platform for online mock interviews. They allow you to schedule a session with another anonymous user and you each take turns to interview each other.
Before the session, you are given a problem which will be used to ask your interviewee. You attempt to solve it on your own, but if you are stuck there are hints and a suggested solution.</description></item><item><title>Resources for technical interviews</title><link>https://jsstrn.me/notes/resources-for-technical-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/resources-for-technical-interview/</guid><description>Here&amp;rsquo;s a curated list of resources to help prepare you for your next technical interview.
Pramp – my personal favorite resource for mock interviews Tech Interview Handbook by Yangshun Tay Frontend Interview Handbook by Yangshun Tay Curated list of the top 75 LeetCode interview questions</description></item><item><title>The best online whiteboards for system design interviews</title><link>https://jsstrn.me/notes/whiteboard-for-system-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/whiteboard-for-system-design/</guid><description>While there are plenty of online whiteboards available to choose from, many of them require you to sign up for an account before you can use them. This might be suitable for collaborations with teams, but adds a layer of friction for those of us who want to use it during system design interviews.
The tools I have listed are ones that are open source and do not require creating an account to use them.</description></item></channel></rss>