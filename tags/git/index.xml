<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>git on Jesstern</title><link>https://jsstrn.me/tags/git/</link><description>Recent content in git on Jesstern</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jsstrn.me/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Add aliases to Git commands</title><link>https://jsstrn.me/notes/git-alias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-alias/</guid><description>Here&amp;rsquo;s how to add aliases to common Git commands</description></item><item><title>Check the status of a Git repository</title><link>https://jsstrn.me/notes/git-status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-status/</guid><description>To check the status of the Git repository.
git status We can see a --short or -s version with this command.
git status --short For convenience, you can add git st as an alias.
git config --global alias.st &amp;#34;status --short&amp;#34;</description></item><item><title>Clone a repository with submodules</title><link>https://jsstrn.me/notes/git-submodule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-submodule/</guid><description>Git commands are different for different versions so be sure to check your Git version.
git --version Clone a repository with submodules using the --recurse-submodules flag. This works for Git version 2.13 or higher.
git clone --recurse-submodules &amp;lt;remote-repo-url&amp;gt; If the repository has a lot of submodules, then adding the -j8 flag will fetch up to 8 submodules in parallel.
git clone --recurse-submodules -j8 &amp;lt;remote-repo-url&amp;gt; Alternatively, first clone the repository and then add the submodules.</description></item><item><title>Reset changes in Git</title><link>https://jsstrn.me/notes/git-reset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-reset/</guid><description>Reverting your changes in Git</description></item><item><title>Sign your commits</title><link>https://jsstrn.me/notes/git-sign-commits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-sign-commits/</guid><description>How to sign your Git commits with a GPG key</description></item><item><title>Squash your commits</title><link>https://jsstrn.me/notes/git-squash-commits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-squash-commits/</guid><description>It&amp;rsquo;s not uncommon to make several commits during the course of developing your feature. When it&amp;rsquo;s time to push your code you want to combine all of your commits into one logical commit.
When making pull requests and submitting code for review, it&amp;rsquo;s easier for others to view all of our changes in one commit rather than have them all scattered in numerous commits. To do this, we want to squash all our commits into one commit.</description></item><item><title>Using SSH and GPG keys</title><link>https://jsstrn.me/notes/gpg-ssh-keys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/gpg-ssh-keys/</guid><description>With most remote Git servers such as GitHub and GitLab, you will see both SSH and GPG keys and you might be wondering what they are used for.
SSH keys SSH keys are used for authenticating with the remote Git server without you requiring to key in your username and password.
We want to associate an SSH key with your computer&amp;rsquo;s identity so generate an SSH key for each device. In the event that you lose your computer, you can revoke the SSH key and commits coming from that device will no longer be allowed.</description></item><item><title>View changes before committing</title><link>https://jsstrn.me/notes/git-commit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-commit/</guid><description>Review code changes before staging and committing</description></item><item><title>View code changes</title><link>https://jsstrn.me/notes/git-diff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-diff/</guid><description>View code changes with &lt;code>git diff&lt;/code></description></item></channel></rss>