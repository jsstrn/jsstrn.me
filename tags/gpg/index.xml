<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>gpg on Jesstern</title><link>https://jsstrn.me/tags/gpg/</link><description>Recent content in gpg on Jesstern</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jsstrn.me/tags/gpg/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing GPG Suite on macOS</title><link>https://jsstrn.me/notes/install-gpg-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/install-gpg-tools/</guid><description>You don&amp;rsquo;t actually need to install GPG Suite. You can access all your GPG keys via the gpg command line tool via your terminal.
Installing GPG Suite gives you the GPG Keychain which makes it easier for you to view all your keys and to store your passphrase in the keychain so that you don&amp;rsquo;t have to keep typing it in all the time.
You can either download and install GPG Suite directly from their website or via Homebrew.</description></item><item><title>Save your GPG key passphrase to Keychain</title><link>https://jsstrn.me/notes/gpg-save-passphrase-to-keychain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/gpg-save-passphrase-to-keychain/</guid><description>If you use your GPG key to sign your commits you will have to key in your passphrase each time you make a new commit. You can save your passphrase to Keychain with the help of Pinentry Mac.
Install pinentry-mac from Homebrew
brew install pinentry-mac Open the configuration file to your gpg-agent located at ~/.gnupg/gpg-agent.conf with vim or your favorite editor.
vim ~/.gnupg/gpg-agent.conf Add this line to set your pinentry-program to pinentry-mac</description></item><item><title>Sign your commits</title><link>https://jsstrn.me/notes/git-sign-commits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-sign-commits/</guid><description>How to sign your Git commits with a GPG key</description></item><item><title>Using SSH and GPG keys</title><link>https://jsstrn.me/notes/gpg-ssh-keys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/gpg-ssh-keys/</guid><description>With most remote Git servers such as GitHub and GitLab, you will see both SSH and GPG keys and you might be wondering what they are used for.
SSH keys SSH keys are used for authenticating with the remote Git server without you requiring to key in your username and password.
We want to associate an SSH key with your computer&amp;rsquo;s identity so generate an SSH key for each device. In the event that you lose your computer, you can revoke the SSH key and commits coming from that device will no longer be allowed.</description></item></channel></rss>