<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>distributed systems on Jesstern</title><link>https://jsstrn.me/tags/distributed-systems/</link><description>Recent content in distributed systems on Jesstern</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://jsstrn.me/tags/distributed-systems/index.xml" rel="self" type="application/rss+xml"/><item><title>CAP Theorem</title><link>https://jsstrn.me/notes/cap-theorem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/cap-theorem/</guid><description>The CAP Theorem states that you can only provide two out of the following three guarantees:
Consistency Availability Partition tolerance Given that networks are not reliable, one of the two guarantees must always be partition tolerance. Therefore, realistically, we only have consistency and availability to choose from.</description></item><item><title>Consistency vs. availability</title><link>https://jsstrn.me/notes/consistency-vs-availability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/consistency-vs-availability/</guid><description>Let&amp;rsquo;s consider the following scenario, Arya and Bhavani want to collaborate on an online document.
Always consistent, but not always available One approach is when one person is working on the document, the document is locked to prevent the other person from working on it at the same time. This is the approach used in WordPress.
The trade-off here is that the document remains locked as long as one person has the document opened, making it unavailable for anyone else to work on it.</description></item></channel></rss>