[{"content":"Once upon a time there was a young stonecutter who looked with envy upon the rich merchant who employed him. One day he was muttering to himself about what it would be like to have such freedom and power when, to his amazement, an angel appeared and spoke the words “You are what you have said.” In an instant, the stonecutter had become the merchant.\nHe was very happy with his lot until he saw the king of the land ride by with his coterie. “Now that’s the way to live,” he thought. Almost before he had asked, the angel had granted his wish and the merchant had become the king.\nAll was well until one beautiful summer’s day when the king began sweating in his heavy royal garb. “What freedom and power the sun has,” he thought. “It can float through the sky and call forth water from a king. That is what I would truly like to be.”\nAs the thought appeared in his mind, the angel appeared to grant it.\nNow the king had become the sun, and he reveled in his freedom and power as he floated high above the earth. But after a time, a cloud appeared and blocked the land from his view. When he watched the lightning burst forth from the cloud and heard the roar of the thunder, he knew that he was witnessing true freedom and power. Before he even realized what was happening, the angel had transformed him into a cloud.\nWhat fun it was to pour rain forth upon the land! Wherever the man-cloud went, forests were washed away, and puddles became oceans in his wake. But no matter how hard he tried, there was one huge mountain made of stone that stood immovable and unaffected by his rain.\n“Surely that is the ultimate power,” he thought. “To stand tall in the face of any circumstance—that is true freedom and power.”\nIn an instant, the angel had made it so, and the man could feel the incredible power of being an immovable object in the midst of any storm. Yet even as he was delighting in his immense strength and resilience, he could see a small man chipping away at his base with a pick and a chisel and a hammer.\n“That man is even more powerful than I,” he thought. “See how he is able to take stone away from me with just a few blows of his mighty tools. That is the kind of freedom and power I have always longed for.”\nThe angel appeared and once again spoke the words “You are what you have said.”\nAnd with those words, the older but wiser stonecutter continued on his journey.\nHave a question or suggestion? Reply to this post via email. ","permalink":"https://jsstrn.me/blog/the-stonecutter/","summary":"Once upon a time there was a young stonecutter who looked with envy upon the rich merchant who employed him. One day he was muttering to himself about what it would be like to have such freedom and power when, to his amazement, an angel appeared and spoke the words “You are what you have said.” In an instant, the stonecutter had become the merchant.\nHe was very happy with his lot until he saw the king of the land ride by with his coterie.","title":"The Stonecutter"},{"content":"Sending sensitive data via email is a bad idea for several reasons.\nWe might be inclined to think that we can first encrypt our documents before sending them, but we soon realize that we have another problem – how do we send the password to our recipient?\nOf course, we can\u0026rsquo;t send the password via email. What some companies have done is to use a password that is known to the customer, like their date of birth or account number and even include the format for the password.\nWhile this might seem like a good idea, information like your date of birth or passport number can all be retrieved through social engineering. Furthermore, using such weak passwords make them easy to crack in just a couple of weeks. By including the format, you\u0026rsquo;ve just sped up this process to mere seconds.\nIts bad enough when companies send out sensitive documents like bank statements and investment portfolios via email, but its even worse when these companies ask you to send them sensitive documents via email.\nUnder no circumstances should you ever do this. It does not matter if they say they are from the government, your bank, or a Nigerian Prince. An email\u0026rsquo;s sender field can easily be spoofed making them appear to have originated from a legitimate source.\n When I had to take out a loan from a bank they required me to send over some documents over email.\nFirst I encrypted my documents with a passphrase that was between 30 and 50 characters long with a mix of uppercase and lowercase letters, numbers, and symbols.\nI then sent the encrypted documents via email and physically made my way to the bank to tell them the password to decrypt it. It was definitely cumbersome, but I didn\u0026rsquo;t see how else to go about it as they did not have an online application form.\nHave a question or suggestion? Reply to this post via email. ","permalink":"https://jsstrn.me/blog/do-not-send-sensitive-data-via-email/","summary":"Sending sensitive data via email is a bad idea for several reasons.\nWe might be inclined to think that we can first encrypt our documents before sending them, but we soon realize that we have another problem – how do we send the password to our recipient?\nOf course, we can\u0026rsquo;t send the password via email. What some companies have done is to use a password that is known to the customer, like their date of birth or account number and even include the format for the password.","title":"Do not send sensitive data via email"},{"content":"Several years ago, a friend of mine from Germany visited Singapore. They were really impressed with the well maintained roads, excellent public transportation system, and infrastructure. However, they wondered how it was possible for the Singapore government to fund all this with such low income taxes.\nIn countries like Germany and Australia, they have very high income taxes in order to pay for public goods such as healthcare, education, transportation, and infrastructure. In contrast, Singapore has relatively low income taxes and public goods that are the envy of the world.\nSo how does Singapore pay for all this stuff?\nLow income tax Singapore follows a progressive tax rate with its highest personal income tax rate of 22% for those who earn over SGD320,000 per year.\nCentral Provident Fund Each month, up to 37% of our salary goes to our CPF which can be used at a later time for healthcare, housing, education, and retirement.\nIn the meantime, our CPF monies, which make up a portion of our reserves, is invested through our sovereign wealth fund. The investment returns from our reserves is then used to pay for public goods.\nIf we think of CPF as a form of tax then our total income tax goes up significantly and would be even higher than many other countries.\nHowever, CPF isn\u0026rsquo;t actually a tax because we get to use our monies at a later stage of our lives. It\u0026rsquo;s effectively a long-term loan to the government which gets paid back to us with interests of between 2.5% and 6%.\nHigh taxes for car ownership Owning a car is not a necessity in Singapore because of our well connected public transportation system.\nIf you want to buy a car, you have to pay for a Certificate of Entitlement (COE) and Additional Registration Fee (ARF) on top of the cost of the car itself.\nOf course, you also have to pay for road tax, high petrol costs, and parking fees which all have taxes embedded in them. These taxes are then used to pay for better transportation infrastructure.\nLow tax for home ownership To encourage home ownership, property taxes are lower for public housing and owner occupied properties.\nHigh taxes for vices Singapore also has high taxes on goods such as cigarettes, alcohol, and gambling. The so called \u0026ldquo;sin\u0026rdquo; tax is essentially to discourage people from engaging in unhealthy and undesirable behavior.\nConclusion Economics is about incentives and disincentives and this is very much true in Singapore. We have low income taxes to incentivize people to work. We contribute to a fund to help pay for national development and our financial needs later in life. With high taxes on luxury goods and vices, we have to prioritize things that are more important to us.\nWhile this approach does not come without its own set of challenges, its a system that has worked well for Singapore.\nHave a question or suggestion? Reply to this post via email. ","permalink":"https://jsstrn.me/blog/singapore-approach-to-taxation/","summary":"Several years ago, a friend of mine from Germany visited Singapore. They were really impressed with the well maintained roads, excellent public transportation system, and infrastructure. However, they wondered how it was possible for the Singapore government to fund all this with such low income taxes.\nIn countries like Germany and Australia, they have very high income taxes in order to pay for public goods such as healthcare, education, transportation, and infrastructure.","title":"Singapore's approach to taxation"},{"content":"Over 2000 years ago, Hippocrates, widely considered the father of medicine, believed that \u0026ldquo;all disease begins in the gut\u0026rdquo;. It would seem he was on to something.\nIn 2020, I kept a log of the food I ate and the effects its had on my digestive system. From this observation, I\u0026rsquo;ve been able to identify several foods that I\u0026rsquo;m sensitive to. I decided to remove gluten from my diet for a month to see the effects it would have.\nWhen I reintroduced gluten back into my diet, I started experiencing indigestion, bloating, belching, and diarrhea. These days, I typically observe a gluten-free vegan diet and avoid spicy food. I also avoid beverages with alcohol or caffeine.\nAccording to Dr Alessio Fasano, gluten is a toxin to human beings and we are unable to digest it. How we react to this toxin differs – some people develop an autoimmune response that attacks its own body, others respond by attacking the gluten fragments, while others have no apparent response. While some people do not react to gluten, it is important to note that it is still a toxin.\nThe problem with gluten is that it causes inflammation and results in something called leaky gut syndrome or intestinal permeability. An important task of the intestine is to form a defensive barrier to prevent absorption of damaging substances during digestion. When the permeability of the intestinal walls are compromised, harmful substances are able to leak into the blood stream.\nChronic inflammation has been linked to many diseases, including heart disease, cancer, diabetes, autism, arthritis, depression, and Alzheimer\u0026rsquo;s.\nBooks Here\u0026rsquo;s a list of books exploring this topic and other health related issues:\n Brain Fog Fix by Mike Dow Wheat Belly by William Davis The Autoimmune Solution by Amy Myers Gluten Freedom by Alessio Fasano  References  Foods that fight inflammation  Have a question or suggestion? Reply to this post via email. ","permalink":"https://jsstrn.me/blog/health-problem-with-inflammatory-foods/","summary":"Over 2000 years ago, Hippocrates, widely considered the father of medicine, believed that \u0026ldquo;all disease begins in the gut\u0026rdquo;. It would seem he was on to something.\nIn 2020, I kept a log of the food I ate and the effects its had on my digestive system. From this observation, I\u0026rsquo;ve been able to identify several foods that I\u0026rsquo;m sensitive to. I decided to remove gluten from my diet for a month to see the effects it would have.","title":"The problem with inflammatory foods"},{"content":"When we were children, we might have been taught this in English grammar class:\n He is happy She is happy I am happy You are happy  Why is it that we say, \u0026ldquo;you are happy,\u0026rdquo; rather than, \u0026ldquo;you is happy,\u0026rdquo; even though \u0026lsquo;you\u0026rsquo; is singular? The answer can be found in its etymology.\nIn the past, we used to use the word \u0026lsquo;thou\u0026rsquo; as the second person singular form while \u0026lsquo;you\u0026rsquo; was actually the plural form used to refer to two or more people. In modern English, we no longer have a word to distinguish between the singular and plural forms of you, instead we might say, \u0026ldquo;you all\u0026rdquo; or \u0026ldquo;you two\u0026rdquo; to refer to two or more people.\nPeople began using the word \u0026lsquo;you\u0026rsquo; in its singular form to refer to their superiors as a form of respect. The usage gradually gained popularity they used it amongst their peers and eventually with everyone else.\nReference  Origin and meaning of thou Origin and meaning of you  Have a question or suggestion? Reply to this post via email. ","permalink":"https://jsstrn.me/blog/etymology-thou-you/","summary":"When we were children, we might have been taught this in English grammar class:\n He is happy She is happy I am happy You are happy  Why is it that we say, \u0026ldquo;you are happy,\u0026rdquo; rather than, \u0026ldquo;you is happy,\u0026rdquo; even though \u0026lsquo;you\u0026rsquo; is singular? The answer can be found in its etymology.\nIn the past, we used to use the word \u0026lsquo;thou\u0026rsquo; as the second person singular form while \u0026lsquo;you\u0026rsquo; was actually the plural form used to refer to two or more people.","title":"The etymology of 'thou' and 'you'"},{"content":"When the founder of Telegram turned 36, he wrote about his secrets to looking younger than his age.\nPavel Durov listed seven tips – avoid alcohol, sleep more, avoid overeating, exercise regularly, limit stress, avoid eating meat, and live alone.\nOf these seven, I follow all of them except for living alone. I also avoid caffeine.\nHave a question or suggestion? Reply to this post via email. ","permalink":"https://jsstrn.me/blog/secrets-to-looking-younger-than-your-age/","summary":"When the founder of Telegram turned 36, he wrote about his secrets to looking younger than his age.\nPavel Durov listed seven tips – avoid alcohol, sleep more, avoid overeating, exercise regularly, limit stress, avoid eating meat, and live alone.\nOf these seven, I follow all of them except for living alone. I also avoid caffeine.\nHave a question or suggestion? Reply to this post via email. ","title":"Secrets to looking younger than your age"},{"content":"This question is from Interview Cake.\nvar text = \u0026#34;outside\u0026#34;; function displayText() { console.log(text); var text = \u0026#34;inside\u0026#34;; } displayText(); What do you think will be output onto the console?\nIt\u0026rsquo;s not \u0026ldquo;outside\u0026rdquo;.\nIt\u0026rsquo;s not \u0026ldquo;inside\u0026rdquo; either.\nIt\u0026rsquo;s actually \u0026ldquo;undefined\u0026rdquo; because of the hoisted variable.\nThe question is trying to test your understanding on variable hoisting when using the var keyword, but we should not even be using var in modern JavaScript in the first place.\nI would argue that this is not a good type of interview question. Being able to answer this question just tests how good of a compiler you are. Humans are not machines. It\u0026rsquo;s far more important to determine what is bad code and to know how to retify it.\nThe real issue with this code is that it is poorly written. All too often I see companies with interviews like these and then they wonder why their programmers write code so poorly.\nA better question might be to present the above code and ask the candidate if they see a problem with the code and then to refactor it so that there\u0026rsquo;s no ambiguity. This would test the candidate\u0026rsquo;s ability to identify bad code and to also refactor them.\nThe candidate might notice that the question uses var instead of const or let which may lead to unexpected behavior. Replacing var with const or let in this example, would yield an error – Uncaught ReferenceError: can't access lexical declaration 'text' before initialization.\nThe candidate can then write a test to assert the correct output and refactor the code to produce the desired outcome.\nHave a question or suggestion? Reply to this post via email. ","permalink":"https://jsstrn.me/blog/js-lame-interview-question/","summary":"This question is from Interview Cake.\nvar text = \u0026#34;outside\u0026#34;; function displayText() { console.log(text); var text = \u0026#34;inside\u0026#34;; } displayText(); What do you think will be output onto the console?\nIt\u0026rsquo;s not \u0026ldquo;outside\u0026rdquo;.\nIt\u0026rsquo;s not \u0026ldquo;inside\u0026rdquo; either.\nIt\u0026rsquo;s actually \u0026ldquo;undefined\u0026rdquo; because of the hoisted variable.\nThe question is trying to test your understanding on variable hoisting when using the var keyword, but we should not even be using var in modern JavaScript in the first place.","title":"Beware the lame JavaScript interview question"},{"content":"Here\u0026rsquo;s a simple tool to generate ASCII art.\n","permalink":"https://jsstrn.me/notes/generate-ascii-art/","summary":"Here\u0026rsquo;s a simple tool to generate ASCII art.","title":"A simple tool to generate ASCII art"},{"content":"First, create a favicon at favicon.io for your site. This will create the following files:\n android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon.ico  Drop these files into the static folder of your Hugo site. Build the project with the hugo command and publish.\n","permalink":"https://jsstrn.me/notes/hugo-add-favicon/","summary":"How to add a favicon to a Hugo site","title":"Add a favicon to a Hugo site"},{"content":"A humans.txt file contains information about the different people who have contributed to building the website.\nHave a look at the humans.txt pages by Medium and Trello. I think Netflix has a very cool humans.txt page.\nThis website also has a humans.txt page.\n","permalink":"https://jsstrn.me/notes/humans.txt/","summary":"A humans.txt file contains information about the different people who have contributed to building the website.\nHave a look at the humans.txt pages by Medium and Trello. I think Netflix has a very cool humans.txt page.\nThis website also has a humans.txt page.","title":"Add a humans.txt file to your site"},{"content":"To create an alias for git checkout.\ngit config --global alias.co checkout Instead of git checkout, you can now run\ngit co Some common aliases to consider adding\ngit config --global alias.co checkout git config --global alias.st \u0026#34;status --short\u0026#34; git config --global alias.lg \u0026#34;log --oneline --graph\u0026#34; git config --global alias.uncommit \u0026#34;reset --soft HEAD~1\u0026#34; To see the list of aliases in your Git configuration\ngit config --list | grep alias If you want to add this as an alias you will need to add ! to qualify it as a full Bash command\ngit config --global alias.alias \u0026#34;!git config --list | grep alias\u0026#34; If you use dotfiles, you can add all your aliases directly to your .gitconfig file.\n[alias] br = branch cm = commit -m co = checkout st = status ","permalink":"https://jsstrn.me/notes/git-alias/","summary":"Here\u0026rsquo;s how to add aliases to common Git commands","title":"Add aliases to Git commands"},{"content":"Create a custom.css file to override the existing CSS rules in your current theme. You can name your CSS file whatever you like and have as many custom CSS files as you like.\nUpdate your config.toml file as follows:\n[params] customCss = [\u0026#34;css/custom.css\u0026#34;] ","permalink":"https://jsstrn.me/notes/hugo-custom-css/","summary":"Add a custom CSS file to override your current theme in Hugo","title":"Add custom CSS to your Hugo site"},{"content":"Individuals and interactions over processes and tools People over processes – while there is value in following protocols and processes, when they get in our way of our work we have to come together as a team and reevaluate what works best for us.\nWorking software over comprehensive documentation Software over specifications – remember that we cannot ship documentation to our customers. Write comprehensive unit and acceptance tests to ensure our software does what it says on the tin.\nCustomer collaboration over contract negotiation Collaboration over constraints – there\u0026rsquo;s no better way to get feedback then collaborating with all stakeholders (e.g. designers, business analysts, quality analysts, product owners, and customers).\nResponding to change over following a plan Responsiveness over rigidity – remember that the objective is not to stick to the plan, but to create value for our customers.\nReference  Manifesto for Agile Software Development  Principles behind the Agile Manifesto  ","permalink":"https://jsstrn.me/notes/agile-manifesto/","summary":"Individuals and interactions over processes and tools People over processes – while there is value in following protocols and processes, when they get in our way of our work we have to come together as a team and reevaluate what works best for us.\nWorking software over comprehensive documentation Software over specifications – remember that we cannot ship documentation to our customers. Write comprehensive unit and acceptance tests to ensure our software does what it says on the tin.","title":"Agile manifesto explained"},{"content":"These are the 16 leadership principles from Amazon.\n Customer obsession Ownership Invent and simplify Are right, a lot Learn and be curious Hire and develop the best Insist on the highest standards Think big Bias for action Frugality Earn trust Dive deep Have backbone; disagree and commit Deliver results Strive to be earth\u0026rsquo;s best employer Success and scale bring broad responsibility  Learn more about the Amazon Leadership Principles.\n","permalink":"https://jsstrn.me/notes/amazon-leadership-principles/","summary":"These are the 16 leadership principles from Amazon.\n Customer obsession Ownership Invent and simplify Are right, a lot Learn and be curious Hire and develop the best Insist on the highest standards Think big Bias for action Frugality Earn trust Dive deep Have backbone; disagree and commit Deliver results Strive to be earth\u0026rsquo;s best employer Success and scale bring broad responsibility  Learn more about the Amazon Leadership Principles.","title":"Amazon's leadership principles"},{"content":"I like listening to Apple Podcasts because it\u0026rsquo;s available on iPhone, iPad, Mac, and Apple TV and they don\u0026rsquo;t require me to sign in to them.\nIf you\u0026rsquo;re trying to search for a particular episode or something specific then I find Apple Podcast is the way to go. Their search feature is definitely superior to most other podcast apps out there.\nWhile I prefer Apple Podcasts, it\u0026rsquo;s not the best app to discover new content. For that, I rely on Pocket Casts.\nI would be happy to use Pocket Casts as my default podcast app if not for the fact that they don\u0026rsquo;t allow me to sign in with my Apple ID. That just adds another layer of friction.\nSo for now I have these two apps on my iPhone – one for discovering new content and the other to actually listen to them.\n","permalink":"https://jsstrn.me/notes/apple-podcasts-pocket-casts/","summary":"I like listening to Apple Podcasts because it\u0026rsquo;s available on iPhone, iPad, Mac, and Apple TV and they don\u0026rsquo;t require me to sign in to them.\nIf you\u0026rsquo;re trying to search for a particular episode or something specific then I find Apple Podcast is the way to go. Their search feature is definitely superior to most other podcast apps out there.\nWhile I prefer Apple Podcasts, it\u0026rsquo;s not the best app to discover new content.","title":"Apple Podcasts and Pocket Casts"},{"content":"First, install Avahi on your Raspberry Pi\nsudo apt-get install avahi-daemon Now you can access your Raspberry Pi via its hostname raspberrypi.local instead of its IP address. You can also change the hostname (see reference).\nssh pi@raspberrypi.local Reference  How (and Why) to Assign the .local Domain to Your Raspberry Pi How to Change Your Raspberry Pi (or Other Linux Device’s) Hostname  ","permalink":"https://jsstrn.me/notes/raspi-local-domain/","summary":"How to assign a \u003ccode\u003e.local\u003c/code\u003e domain to your Raspberry Pi","title":"Assign a .local domain to a Raspberry Pi"},{"content":"Using an IP address can be quite cumbersome, so let\u0026rsquo;s assign a .local domain to your NAS.\nHead over to Control Panel and select Network. Under the General tab, set your server name. Click Apply and you can now access your NAS with http://\u0026lt;server-name\u0026gt;.local:5000 from a web browser that\u0026rsquo;s within the same local network.\n","permalink":"https://jsstrn.me/notes/synology-local-domain/","summary":"Using an IP address can be quite cumbersome, so let\u0026rsquo;s assign a .local domain to your NAS.\nHead over to Control Panel and select Network. Under the General tab, set your server name. Click Apply and you can now access your NAS with http://\u0026lt;server-name\u0026gt;.local:5000 from a web browser that\u0026rsquo;s within the same local network.","title":"Assign a .local domain to your Synology NAS"},{"content":"Test assertions should be explicit.\nIf I\u0026rsquo;m trying to assert that something should be true I avoid using the toBeTruthy() matcher.\nIt\u0026rsquo;s important to realize that in JavaScript, all values are truthy unless they are defined as falsy. This means that as long as result is not a falsy value (e.g. false, \u0026quot;\u0026quot;, null, undefined, NaN, etc.), the assertion will pass.\nexpect(result).toBeTruthy() // passes if result is {} or [] or 1 Contrast it with this approach where result will only pass if its value is true.\nexpect(result).toBe(true) // passes only if result is true Similarly, if I am asserting that something should be false then I avoid using toBeFalsy.\nexpect(result).toBeFalsy() // passes if result is \u0026#34;\u0026#34; or null or 0 In this case, the test case can only pass if its value is false.\nexpect(result).toBe(false) // passes only if result is false ","permalink":"https://jsstrn.me/notes/jest-avoid-tobetruthy-tobefalsy/","summary":"Test assertions should be explicit.\nIf I\u0026rsquo;m trying to assert that something should be true I avoid using the toBeTruthy() matcher.\nIt\u0026rsquo;s important to realize that in JavaScript, all values are truthy unless they are defined as falsy. This means that as long as result is not a falsy value (e.g. false, \u0026quot;\u0026quot;, null, undefined, NaN, etc.), the assertion will pass.\nexpect(result).toBeTruthy() // passes if result is {} or [] or 1 Contrast it with this approach where result will only pass if its value is true.","title":"Avoid using toBeTruthy() and toBeFalsy() matchers"},{"content":"Install the Hyper Backup package in your Synology NAS and configure it to back up your data on an external cloud service such as S3, Dropbox, etc.\n","permalink":"https://jsstrn.me/notes/synology-backup-your-data-with-hyper-backup/","summary":"Install the Hyper Backup package in your Synology NAS and configure it to back up your data on an external cloud service such as S3, Dropbox, etc.","title":"Backup your data with Hyper Backup on Synology NAS"},{"content":"I created a Telegram channel to share videos from the BBC Earth YouTube channel. Since this project did not warrant a server to be up 24/7, I leveraged on a serverless architecture to keep the cost low. I used AWS Lambda for the lambda functions and AWS CloudWatch to trigger the lambda through scheduled events.\nFirst I built a Telegram bot which fetches a random video from the BBC Earth YouTube channel and publishes it to a Telegram channel. I then have it run on a daily schedule.\nThe BBC Earth Daily channel can be viewed from a web browser or you can subscribe to the channel on Telegram. The code is open sourced so you can fork it and build your own.\n","permalink":"https://jsstrn.me/projects/bbc-earth-daily/","summary":"How I built the BBC Earth Daily chatbot","title":"BBC Earth Daily"},{"content":"There are many different models of Raspberry Pi depending on your needs.\n  The Raspberry Pi 4, 400, and Zero are all computers with varying degrees of technical specifications, while the Pico is a microcontroller, similar to the Arduino.\nIf you\u0026rsquo;re buying an all-purpose desktop computer then buy it with a CanaKit Raspberry Pi starter kit. It comes with all the essential accessories you will need to get started including a case with a fan, some heat sinks, and a power supply. Try searching on Amazon for the best deals for Raspberry Pi starter kits.\nAlso checkout Cytron, Element 14, Argon40, and RS Components for Raspberry Pi models and accessories like displays, cases, cameras, and HATs (Hardware Attached on Top).\n","permalink":"https://jsstrn.me/notes/raspi-purchase/","summary":"Tips on how to buy your first Raspberry Pi","title":"Buying a Raspberry Pi"},{"content":"The CAP Theorem states that you can only provide two out of the following three guarantees:\n Consistency Availability Partition tolerance  Given that networks are not reliable, one of the two guarantees must always be partition tolerance. Therefore, realistically, we only have consistency and availability to choose from.\n","permalink":"https://jsstrn.me/notes/cap-theorem/","summary":"The CAP Theorem states that you can only provide two out of the following three guarantees:\n Consistency Availability Partition tolerance  Given that networks are not reliable, one of the two guarantees must always be partition tolerance. Therefore, realistically, we only have consistency and availability to choose from.","title":"CAP Theorem"},{"content":"Logical OR operator (||) Let\u0026rsquo;s say we want value to be set to 100 if number is null or undefined.\nconst number = null const value = number || 100 // value =\u0026gt; 100 While it seems this would work, we have a nasty bug in our code when number is initialized to 0.\nconst number = 0 const value = number || 100 // value =\u0026gt; 100 The problem with using JavaScript\u0026rsquo;s logical OR (||) operator is that null, undefined, \u0026quot;\u0026quot;, and 0 all evaluate to false – they are falsy.\nNullish coalescing operator (??) A better appraoch is to use the double question marks.\nThe nullish coalescing operator is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined.\nconst number = 0 const value = number ?? 100 // value =\u0026gt; 0 Other approaches We can use strict equality to check if a variable is null or undefined in JavaScript.\nif (number === null || number === undefined) { // value is either null or undefined } What I also found interesting is that although the regular equality in JavaScript is generally frowned upon, these two conditions are exactly identical.\nOf course, in general I would still prefer to use the code above as it is explicit in its intent.\nif (value == null) { // value is either null or undefined } Also, have a look at this equality table.\n","permalink":"https://jsstrn.me/notes/js-check-null-undefined/","summary":"Use double question mark operator to check if a variable is null or undefined in JavaScript","title":"Check if a variable is null or undefined in JavaScript"},{"content":"It may be useful for troubleshooting to know the architecture and CPU of your Synology NAS server.\nFor instance, the Synology DS218j model is an x18 Series and has a Dual Core Marvell Armada 385 88F6820 with 512MB of DDR3 RAM.\n","permalink":"https://jsstrn.me/notes/synology-cpu-architecture/","summary":"It may be useful for troubleshooting to know the architecture and CPU of your Synology NAS server.\nFor instance, the Synology DS218j model is an x18 Series and has a Dual Core Marvell Armada 385 88F6820 with 512MB of DDR3 RAM.","title":"Check the architecture of your Synology NAS"},{"content":"To check the status of the Git repository.\ngit status We can see a --short or -s version with this command.\ngit status --short For convenience, you can add git st as an alias.\ngit config --global alias.st \u0026#34;status --short\u0026#34; ","permalink":"https://jsstrn.me/notes/git-status/","summary":"To check the status of the Git repository.\ngit status We can see a --short or -s version with this command.\ngit status --short For convenience, you can add git st as an alias.\ngit config --global alias.st \u0026#34;status --short\u0026#34; ","title":"Check the status of a Git repository"},{"content":"Ingredients Main dish  vegetables (kang kong, spinach, etc.) textured vegetable protein (TVP) garlic  Sauce  vegetarian mushroom oyster sauce miso paste sesame seed oil soy sauce  Preparation Prepare vegetables  chop garlic chop to about 3 inches in length separate the stems from the leaves  Prepare TVP  put 2 tbsp of TVP into a bowl add 2 tbsp of hot water let stand for 5-6 min  Prepare sauce  mix 1 tsp of miso paste and hot water add 1 tbsp of vegetarian mushroom oyster sauce add 1 tbsp sesame seed oil (optional) add a dash of soy sauce  Cooking  set stove to high heat add vegetable cooking oil to wok add chopped garlic add TVP and cook for 1-2 min add stems of vegetables and cook for 1-2 min add sauce add leaves and cook for 1-2 min  ","permalink":"https://jsstrn.me/recipes/chinese-stir-fried-vegetables/","summary":"My recipe for delicious Chinese style stir fried vegetables.","title":"Chinese style stir fried vegetables"},{"content":"Git commands are different for different versions so be sure to check your Git version.\ngit --version Clone a repository with submodules using the --recurse-submodules flag. This works for Git version 2.13 or higher.\ngit clone --recurse-submodules \u0026lt;remote-repo-url\u0026gt; If the repository has a lot of submodules, then adding the -j8 flag will fetch up to 8 submodules in parallel.\ngit clone --recurse-submodules -j8 \u0026lt;remote-repo-url\u0026gt; Alternatively, first clone the repository and then add the submodules. This should work regardless of your Git version.\ngit clone \u0026lt;remote-repo-url\u0026gt; git submodule init git submodule update Reference  How to clone including submodules  ","permalink":"https://jsstrn.me/notes/git-submodule/","summary":"Git commands are different for different versions so be sure to check your Git version.\ngit --version Clone a repository with submodules using the --recurse-submodules flag. This works for Git version 2.13 or higher.\ngit clone --recurse-submodules \u0026lt;remote-repo-url\u0026gt; If the repository has a lot of submodules, then adding the -j8 flag will fetch up to 8 submodules in parallel.\ngit clone --recurse-submodules -j8 \u0026lt;remote-repo-url\u0026gt; Alternatively, first clone the repository and then add the submodules.","title":"Clone a repository with submodules"},{"content":"First, check that your NAS server and your computer are on the same network.\nYou can connect to your NAS server by pointing your browser to http://\u0026lt;your-ip-address\u0026gt;:5000 and then provide the login credentials.\nCheck your home router to determine what IP address has been assigned to your NAS server. Optionally, you can fix an IP address so its easier for you to connect to your NAS in future.\nIf you have set up a .local domain then point your browser to http://\u0026lt;server-name\u0026gt;.local:5000.\n","permalink":"https://jsstrn.me/notes/synology-connect-via-browser/","summary":"First, check that your NAS server and your computer are on the same network.\nYou can connect to your NAS server by pointing your browser to http://\u0026lt;your-ip-address\u0026gt;:5000 and then provide the login credentials.\nCheck your home router to determine what IP address has been assigned to your NAS server. Optionally, you can fix an IP address so its easier for you to connect to your NAS in future.\nIf you have set up a .","title":"Connect to your Synology NAS from a web browser"},{"content":"First, open Control Panel and navigate to Terminal \u0026amp; SNMP. Next, enable SSH service. Click Apply. Now you can SSH into your NAS with your credentials.\nOpen a terminal and connect to your NAS server via SSH\nssh \u0026lt;user\u0026gt;@\u0026lt;ip-address\u0026gt; If you have set up a .local domain, then\nssh \u0026lt;user\u0026gt;@\u0026lt;server-name\u0026gt;.local You will be prompted for your password.\n","permalink":"https://jsstrn.me/notes/synology-connect-via-ssh/","summary":"First, open Control Panel and navigate to Terminal \u0026amp; SNMP. Next, enable SSH service. Click Apply. Now you can SSH into your NAS with your credentials.\nOpen a terminal and connect to your NAS server via SSH\nssh \u0026lt;user\u0026gt;@\u0026lt;ip-address\u0026gt; If you have set up a .local domain, then\nssh \u0026lt;user\u0026gt;@\u0026lt;server-name\u0026gt;.local You will be prompted for your password.","title":"Connect to your Synology NAS with SSH"},{"content":"Let\u0026rsquo;s consider the following scenario, Arya and Bhavani want to collaborate on an online document.\nAlways consistent, but not always available One approach is when one person is working on the document, the document is locked to prevent the other person from working on it at the same time. This is the approach used in WordPress.\nThe trade-off here is that the document remains locked as long as one person has the document opened, making it unavailable for anyone else to work on it.\nThis guarantees that the document is always consistent, but not always available.\nThis approach is used in WordPress and Microsoft SharePoint.\nAlways available, but not always consistent Another approach is to allow both parties to work on the document at the same. This is the approach in Google Docs.\nThe trade-off here is that there may be conflicts and occasionally someone might overwrite the other person\u0026rsquo;s work.\nThis approach guarantees that the document is always available, but not always consistent.\nConclusion In a distributed system, partition tolerance is non-negotiable as network reliability is unpredictable. Therefore, an application must choose between consistency and availability.\nA service can have\n high consistency by blocking any requests (not available) to the data until they are resolved, or high availability by returning data that may be stale (not consistent)  There are trade-offs to either approaches and the right solution depends on what\u0026rsquo;s important for your application.\nFor instance, it is more important for a shopping cart to have high availability. On the other hand, a bank account balance must always be consistent.\n","permalink":"https://jsstrn.me/notes/consistency-vs-availability/","summary":"Let\u0026rsquo;s consider the following scenario, Arya and Bhavani want to collaborate on an online document.\nAlways consistent, but not always available One approach is when one person is working on the document, the document is locked to prevent the other person from working on it at the same time. This is the approach used in WordPress.\nThe trade-off here is that the document remains locked as long as one person has the document opened, making it unavailable for anyone else to work on it.","title":"Consistency vs. availability"},{"content":"It\u0026rsquo;s not uncommon to have our data stored on multiple sources on the cloud. We might have some data stored on Dropbox, others on Google Drive, and still others on iCloud Drive.\nWith Synology\u0026rsquo;s Cloud Sync, they can finally all live in one place.\n","permalink":"https://jsstrn.me/notes/synology-sync-cloud-data-with-cloud-sync/","summary":"It\u0026rsquo;s not uncommon to have our data stored on multiple sources on the cloud. We might have some data stored on Dropbox, others on Google Drive, and still others on iCloud Drive.\nWith Synology\u0026rsquo;s Cloud Sync, they can finally all live in one place.","title":"Consolidate all your cloud storage data with Cloud Sync"},{"content":"I like creating my own favicon with John Sorrentino\u0026rsquo;s Favicon.io. The tool allows you to convert existing images into .ico file format or create a simple favicon from text or emoji.\nAnother useful resource is Icon Archive. They offer beautifully designed icons that can be downloaded in various formats including, .ico.\n","permalink":"https://jsstrn.me/notes/generate-favicon/","summary":"Find or create a suitable favicon for your site","title":"Create a favicon for your site"},{"content":"Install resume-cli tool\nnpm install -g resume-cli Create a new resume.json file\nresume init Validate resume.json to ensure it adheres to the schema\nresume validate Export your resume to HTML or PDF with themes\nresume export --format \u0026lt;type\u0026gt; --theme \u0026lt;theme-name\u0026gt; Serve your resume.json locally\nresume serve --theme \u0026lt;theme-name\u0026gt; To host your resume online, create a Gist on GitHub named resume.json and point to http://registry.jsonresume.org/\u0026lt;your-github-username\u0026gt;.\n","permalink":"https://jsstrn.me/notes/create-resume-with-json/","summary":"Install resume-cli tool\nnpm install -g resume-cli Create a new resume.json file\nresume init Validate resume.json to ensure it adheres to the schema\nresume validate Export your resume to HTML or PDF with themes\nresume export --format \u0026lt;type\u0026gt; --theme \u0026lt;theme-name\u0026gt; Serve your resume.json locally\nresume serve --theme \u0026lt;theme-name\u0026gt; To host your resume online, create a Gist on GitHub named resume.json and point to http://registry.jsonresume.org/\u0026lt;your-github-username\u0026gt;.","title":"Create a resume with JSON Resume"},{"content":"Let\u0026rsquo;s say we want to create a list of numbers from [0..9].\nA simple approach would be to use a for loop\nconst numbers = [] for (let i = 0; i \u0026lt; 10; i++) { numbers.push(i) } // numbers =\u0026gt; [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] Another approach is to use the Array.prototype.keys() method which returns the index of each element\nconst numbers = [...Array(10).keys()] // numbers =\u0026gt; [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] Perhaps the most elegant solution is to use Array.from()\nconst numbers = Array.from({ length: 10 }, (_, i) =\u0026gt; i) // numbers =\u0026gt; [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] Array.from() takes an array-like object as its first argument and a map function that will be applied to each element. In this case, we pass an object with a length property and then we take just return the index from the map function.\nIf we wanted to start our list at 1 instead, then we can do this\nArray.from({ length: 10 }, (_, i) =\u0026gt; i + 1) // numbers =\u0026gt; [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ] Or, more generally, if we wanted include 10 numbers starting from a certain number\nconst startingNumber = 3 Array.from({length: 10}, (_, i) =\u0026gt; i + startingNumber) // numbers =\u0026gt; [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ] References  Question in Stack Overflow Array.from() – 2ality Array.from() – MDN Array.prototype.keys() – MDN  ","permalink":"https://jsstrn.me/notes/js-array-range/","summary":"How to create an array of elements based on a range of numbers in JavaScript","title":"Create an array from range of numbers"},{"content":"I created a Telegram channel to deliver dad jokes every day. I did not want to build a Node.js server and host it on Digital Ocean or Linode because that would be cost inefficient. Instead, I wanted to build an event-driven serverless architecture. We can achieve this with AWS Lambda for the lambda functions and AWS CloudWatch to trigger the lambda through scheduled events.\nFirst I created a bot and added it to a channel. The bot fetches a dad joke from icanhazdadjoke.com and publishes it to the channel. The last step was to trigger the lambda function on a regular schedule.\nYou can visit the Daily Dad Jokes public channel or subscribe to the channel on Telegram.\n","permalink":"https://jsstrn.me/projects/daily-dad-jokes/","summary":"How I built an event-driven serverless Telegram bot to deliver dad jokes to you daily","title":"Daily Dad Jokes"},{"content":"Ingredients  Bob\u0026rsquo;s Red Mill gluten-free pancake mix Bob\u0026rsquo;s Red Mill egg replacer or chia seeds Nutelex Buttery Spread vegan butter Bonsoy soy milk  Preparation Prepare melted butter  add 1 tbsp of butter into a bowl microwave on high heat for 20 sec  Prepare egg substitute  add 1 tbsp egg replacer add 2 tbsp of water mix well in mixing bowl  You can use chia seeds, if you don\u0026rsquo;t have egg replacer.\n add 1 tbsp of chia seeds into a mixing bowl add 3 tbsp of hot water mix well let stand for 5 min  Prepare pancake mix  add 1 cup of pancake mix into mixing bowl add 1 cup of soy milk* add melted butter add egg substitute mix well with whisk  * instructions on packaging suggests 3/4 cups, but 1 cup is recommended.\nCooking  set frying pan on stove to medium heat scoop a small portion of the mix into frying pan cook for 3 min on each side  ","permalink":"https://jsstrn.me/recipes/delicious-gluten-free-pancakes/","summary":"My recipe for vegan and gluten-free pancakes","title":"Delicious gluten-free pancakes"},{"content":"for...of is for arrays The for...of statement iterates over values of an iterable (e.g. String, Array, Set, Map).\nIf we have 10 apples and we have 1 of them, we might say 1 of 10 apples. That\u0026rsquo;s one way to remember that for...of is for arrays.\nconst array = [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;] for (const element of array) { // element =\u0026gt; \u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39; } for...in is for objects The for...in statement iterates over properties of an object, in an arbitrary order.\nIn JavaScript, arrays are also objects so you can use for...in on an array, but the results are probably not what you would expect.\nThe way I like to remember this is \u0026ldquo;for...in objects\u0026rdquo; sounds like \u0026ldquo;foreign objects\u0026rdquo;.\nconst object = { a: 1, b: 2, c: 3 } for (const key in object) { // key =\u0026gt; a, b, c  // object[key] =\u0026gt; 1, 2, 3 } ","permalink":"https://jsstrn.me/notes/js-for-of-vs-for-in/","summary":"for...of is for arrays The for...of statement iterates over values of an iterable (e.g. String, Array, Set, Map).\nIf we have 10 apples and we have 1 of them, we might say 1 of 10 apples. That\u0026rsquo;s one way to remember that for...of is for arrays.\nconst array = [\u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39;] for (const element of array) { // element =\u0026gt; \u0026#39;a\u0026#39;, \u0026#39;b\u0026#39;, \u0026#39;c\u0026#39; } for...in is for objects The for.","title":"Difference between for...of and for...in in JavaScript"},{"content":"Dig is a DNS lookup utility. It\u0026rsquo;s useful when checking if you have setup the DNS configurations correctly for the domain names that you own.\ndig \u0026lt;url\u0026gt; For example, you can check that this URL actually points to GitHub.\ndig notes.jsstrn.me ","permalink":"https://jsstrn.me/notes/dig-dns-lookup-domain/","summary":"How to check your domain\u0026rsquo;s DNS configurations","title":"Dig – DNS lookup utility"},{"content":"KeyboardCleanTool is a free app that disables keyboard input so that you can clean your computer while avoiding unwanted key presses.\nbrew install --cask keyboardcleantool ","permalink":"https://jsstrn.me/notes/keyboard-disable-when-cleaning/","summary":"KeyboardCleanTool is a free app that disables keyboard input so that you can clean your computer while avoiding unwanted key presses.\nbrew install --cask keyboardcleantool ","title":"Disable keyboard when cleaning"},{"content":"While there are plenty of online whiteboards available to choose from, many of them require you to sign up for an account before you can use them. This might be suitable for collaborations with teams, but adds a layer of friction for those of us who want to use it during system design interviews.\nIn particular, when you practice mock interviews on Pramp there is no built in online whiteboard so you\u0026rsquo;ll have to spend precious time during the interview looking for a suitable one.\nExcalidraw is currently the best online whiteboard tool available. You don\u0026rsquo;t need to sign up to use it and can immediately share your whiteboard with a collaborator.\nOne useful addition that you should do is to add the System Design Components by Rohan Pithadiya. There are many other drawing components that you can add from the their public library.\nOther features include, keyboard shortcut, a light and dark theme, exporting your drawings in .excalidraw, .png, or .svg file formats.\nExcalidraw is an open source software built in Reat and written in TypeScript. They also have a Docker image available so you can host your own instance under your own domain. There\u0026rsquo;s even an npm package so you can use Excalidraw as a React component in your projects.\n","permalink":"https://jsstrn.me/notes/excalidraw-online-whiteboard-system-design/","summary":"While there are plenty of online whiteboards available to choose from, many of them require you to sign up for an account before you can use them. This might be suitable for collaborations with teams, but adds a layer of friction for those of us who want to use it during system design interviews.\nIn particular, when you practice mock interviews on Pramp there is no built in online whiteboard so you\u0026rsquo;ll have to spend precious time during the interview looking for a suitable one.","title":"Excalidraw – online whiteboard for system design interviews"},{"content":"If we want a Bash script to stop executing the rest of the script when one of the commands fail, we can simply add set -e to the top of our script.\nset -e ","permalink":"https://jsstrn.me/notes/bash-exit-on-error/","summary":"How to exit a Bash script when any command fails","title":"Exit a Bash script on error"},{"content":"Extreme Programming (XP) adopts an iterative development process with iteration and release planning meetings centered around user stories.\nXP emphasizes writing software with test driven development, pair programming, and continuous integration.\nReference  Introducing Extreme Programming  ","permalink":"https://jsstrn.me/notes/agile-extreme-programming/","summary":"Extreme Programming (XP) adopts an iterative development process with iteration and release planning meetings centered around user stories.\nXP emphasizes writing software with test driven development, pair programming, and continuous integration.\nReference  Introducing Extreme Programming  ","title":"Extreme Programming"},{"content":"Question Implement a function root that calculates the n\u0026rsquo;th root of a number.\nThe function takes a non-negative number x and a positive integer n and returns the positive n\u0026rsquo;th root of x within an error of 0.001. Suppose the real root is y, then\n|y - root(x, n)| \u0026lt; 0.001 Solution  Reveal solution /* time complexity: O(n) space complexity: O(1) */ function root(x, n) { if (n === 0) { return 0; } if (n === 1) { return x; } let lower = 0; let upper = x; let guess = (upper + lower) / 2; let tolerance = 0.001; let isWithinTolerance = () =\u0026gt; Math.abs(Math.pow(guess, n) - x) \u0026lt; tolerance; while (!isWithinTolerance()) { let result = Math.pow(guess, n); if (result \u0026gt; x) { // guess is too high  upper = guess; } else if (result \u0026lt; x) { // guess is too low  lower = guess; } else { break; } guess = (upper + lower) / 2; } return guess; }  ","permalink":"https://jsstrn.me/notes/kata-root-of-number/","summary":"Question Implement a function root that calculates the n\u0026rsquo;th root of a number.\nThe function takes a non-negative number x and a positive integer n and returns the positive n\u0026rsquo;th root of x within an error of 0.001. Suppose the real root is y, then\n|y - root(x, n)| \u0026lt; 0.001 Solution  Reveal solution /* time complexity: O(n) space complexity: O(1) */ function root(x, n) { if (n === 0) { return 0; } if (n === 1) { return x; } let lower = 0; let upper = x; let guess = (upper + lower) / 2; let tolerance = 0.","title":"Find the root of a number"},{"content":"Pi-hole is a domain name server that serves as a network-wide ad blocker.\nThe main idea is to run Pi-hole on a Raspberry Pi and point our router to use it as its DNS. All traffic is then directed through Pi-hole where we can manage block lists.\n","permalink":"https://jsstrn.me/notes/raspi-pi-hole/","summary":"Using Pi-hole to block ads","title":"Getting started with Pi-hole"},{"content":"How to connect to the dark web? The Tor browser is the best way to access any .onion site.\nFor better protection, consider accessing the Tor network through Tails.\nUseful links Here are some useful links to explore while you\u0026rsquo;re in the dark web.\n BBC News – official mirror site DuckDuckGo – a privacy focused search engine Tor Metrics – analytics within the dark web Z-Library – large collection of books Z-Library - requires sign in  ","permalink":"https://jsstrn.me/notes/getting-started-with-dark-web/","summary":"How to connect to the dark web? The Tor browser is the best way to access any .onion site.\nFor better protection, consider accessing the Tor network through Tails.\nUseful links Here are some useful links to explore while you\u0026rsquo;re in the dark web.\n BBC News – official mirror site DuckDuckGo – a privacy focused search engine Tor Metrics – analytics within the dark web Z-Library – large collection of books Z-Library - requires sign in  ","title":"Getting started with the dark web"},{"content":"If you\u0026rsquo;re new to VPN services, you can use ProtonVPN\u0026rsquo;s free plan. The free version allows you to connect to over 20 servers in 3 countries with moderate speeds.\nProtonVPN is from the creators of ProtonMail.\n","permalink":"https://jsstrn.me/notes/vpn-protonvpn-free-plan/","summary":"If you\u0026rsquo;re new to VPN services, you can use ProtonVPN\u0026rsquo;s free plan. The free version allows you to connect to over 20 servers in 3 countries with moderate speeds.\nProtonVPN is from the creators of ProtonMail.","title":"Give VPN a try with ProtonVPN"},{"content":"Command Line Interface Guidelines for building better command-line programs.\n","permalink":"https://jsstrn.me/notes/cli-guidelines/","summary":"Best practices for building CLI tools","title":"Guidelines for building CLI tools"},{"content":"History of Singapore is a podcast series narrated by Oxford historian, Dr Thum Ping Tjin, better known as PJ Thum.\n","permalink":"https://jsstrn.me/notes/history-of-singapore/","summary":"Historian PJ Thum narrates the history of Singapore in this podcast series","title":"History of Singapore"},{"content":"I created my own favicon with John Sorrentino\u0026rsquo;s Favicon.io.\nHere\u0026rsquo;s the settings I used to generate my favicon.\n Background: Rounded Font Family: Fira Code Font Variant: Bold 700 Normal Font Size: 80 Font Color: #FFFFFF Background Color: #145DA0  I got the background color from marmaid lagoon color palette from Canva.\n","permalink":"https://jsstrn.me/notes/how-i-created-my-favicon/","summary":"I created my own favicon with John Sorrentino\u0026rsquo;s Favicon.io.\nHere\u0026rsquo;s the settings I used to generate my favicon.\n Background: Rounded Font Family: Fira Code Font Variant: Bold 700 Normal Font Size: 80 Font Color: #FFFFFF Background Color: #145DA0  I got the background color from marmaid lagoon color palette from Canva.","title":"How I created my favicon for this site"},{"content":"Adding commas to stored telephone numbers in your contacts act as pauses which allow you to navigate complicated phone menus.\nFor instance, if a phone number requires that you select 1 for English then you can simply save their number as follows +65 9876 5432,1 to your contacts. Now when you dial that number it will pause and then dial 1 for you. If you require a prolonged pause then simply add more commas, like so +65 9876 5432,,,1\n","permalink":"https://jsstrn.me/notes/phone-menu-navigation/","summary":"Automatically navigate through complicated phone menus with commas","title":"How to automate phone menu navigation"},{"content":"Download the youtube-dl command line tool from brew\nbrew install youtube-dl youtube-dl supports a huge list of extractors, including popular sites like YouTube and Vimeo.\nList all extractors and pipe it into grep to search for an extractor\nyoutube-dl --list-extractors | grep \u0026#34;udemy\u0026#34; To download a video\nyoutube-dl \u0026#34;video-url\u0026#34; Simply pass in the cookie file to download videos that require login credentials\nyoutube-dl --cookies \u0026lt;path-to-cookie-file\u0026gt; \u0026#34;video-url\u0026#34; You can use a browser extension like cookie.txt to extract your cookie file.\n","permalink":"https://jsstrn.me/notes/download-online-videos/","summary":"Download the youtube-dl command line tool from brew\nbrew install youtube-dl youtube-dl supports a huge list of extractors, including popular sites like YouTube and Vimeo.\nList all extractors and pipe it into grep to search for an extractor\nyoutube-dl --list-extractors | grep \u0026#34;udemy\u0026#34; To download a video\nyoutube-dl \u0026#34;video-url\u0026#34; Simply pass in the cookie file to download videos that require login credentials\nyoutube-dl --cookies \u0026lt;path-to-cookie-file\u0026gt; \u0026#34;video-url\u0026#34; You can use a browser extension like cookie.","title":"How to download online videos"},{"content":"macOS comes with its own version of Ruby which will not allow you to install Gems. To start developing in Ruby, we first have to install our own version of Ruby.\nIt is generally recommended to use a version manager for Ruby, like rbenv to manage different versions of Ruby in various projects.\nbrew install rbenv Add this line to your .zshrc. This will setup rbenv including adding rbenv to your $PATH\neval \u0026#34;$(rbenv init -)\u0026#34; See list of stable Ruby versions to install\nrbenv install -l Install the version of Ruby that you want\nrbenv install \u0026lt;version\u0026gt; State which version of Ruby you want to use as the global version\nrbenv global \u0026lt;version\u0026gt; ","permalink":"https://jsstrn.me/notes/ruby-install/","summary":"How to install Ruby on macOS with Homebrew and rbenv","title":"How to install Ruby on macOS"},{"content":"When writing test cases, we can organize our tests into three segments\n Arrange – set variables, stubs, mocks, spies, etc Act – the action that you wish to assert on Assert – make an assertion on the expected and actual results  Here\u0026rsquo;s a simple example:\ntest(\u0026#34;renders correct number of books\u0026#34;, () =\u0026gt; { // arrange  const books = [ {title: \u0026#34;Animal Farm\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Nineteen Eighty-Four\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Down and Out in Paris and London\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, ] // act  const { queryAllByTestId } = render(\u0026lt;BookList books={books} /\u0026gt;); // assert  expect(queryAllByTestId(\u0026#39;book-item\u0026#39;).length).toBe(3); }) ","permalink":"https://jsstrn.me/notes/testing-arrange-act-assert/","summary":"When writing test cases, we can organize our tests into three segments\n Arrange – set variables, stubs, mocks, spies, etc Act – the action that you wish to assert on Assert – make an assertion on the expected and actual results  Here\u0026rsquo;s a simple example:\ntest(\u0026#34;renders correct number of books\u0026#34;, () =\u0026gt; { // arrange  const books = [ {title: \u0026#34;Animal Farm\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Nineteen Eighty-Four\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Down and Out in Paris and London\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, ] // act  const { queryAllByTestId } = render(\u0026lt;BookList books={books} /\u0026gt;); // assert  expect(queryAllByTestId(\u0026#39;book-item\u0026#39;).","title":"How to structure your unit tests"},{"content":"Here\u0026rsquo;s how you can type the Control (^), Option (⌥), and Command (⌘) keys on macOS.\n Control (^) key – type Shift-6 Option (⌥) key – press Control-Command-Space and search for \u0026ldquo;option\u0026rdquo; Command (⌘) key – press Control-Command-Space and search for \u0026ldquo;place of interest\u0026rdquo;  ","permalink":"https://jsstrn.me/notes/macos-keys-control-option-command/","summary":"Here\u0026rsquo;s how you can type the Control (^), Option (⌥), and Command (⌘) keys on macOS.\n Control (^) key – type Shift-6 Option (⌥) key – press Control-Command-Space and search for \u0026ldquo;option\u0026rdquo; Command (⌘) key – press Control-Command-Space and search for \u0026ldquo;place of interest\u0026rdquo;  ","title":"How to type the Control (^), Option (⌥), and Command (⌘) keys on macOS"},{"content":"Let\u0026rsquo;s say we have an online bookstore where we list all our available books. We want to be able to implement a search bar that can filter out results that match the title, author, publisher, etc.\nSolutions like Algolia, Solr, or Elasticsearch are non-trivial solutions that require quite a bit of configuration and resources. These solutions may also be overkill if you have a small to moderately large dataset.\nWe can look at Fuse.js and Lunr for a more lightweight solution. Fuse.js is what powers the search engine for this site.\n","permalink":"https://jsstrn.me/notes/js-search-functionality/","summary":"Let\u0026rsquo;s say we have an online bookstore where we list all our available books. We want to be able to implement a search bar that can filter out results that match the title, author, publisher, etc.\nSolutions like Algolia, Solr, or Elasticsearch are non-trivial solutions that require quite a bit of configuration and resources. These solutions may also be overkill if you have a small to moderately large dataset.\nWe can look at Fuse.","title":"Implementing a frontend search functionality"},{"content":"By default, VS Code will send diagnostic data which you disable in settings. To do this, search for telemetry in settings and select off under Telemetry Level.\nAnother approach is to install VSCodium which contains the original open sourced binaries and has telemetry disabled by default.\nFor macOS, use Homebrew to install VSCodium\nbrew install vscodium ","permalink":"https://jsstrn.me/notes/vscode-install-vscodium/","summary":"By default, VS Code will send diagnostic data which you disable in settings. To do this, search for telemetry in settings and select off under Telemetry Level.\nAnother approach is to install VSCodium which contains the original open sourced binaries and has telemetry disabled by default.\nFor macOS, use Homebrew to install VSCodium\nbrew install vscodium ","title":"Install VSCodium instead of VS Code"},{"content":"You don\u0026rsquo;t actually need to install GPG Suite. You can access all your GPG keys via the gpg command line tool via your terminal.\nInstalling GPG Suite gives you the GPG Keychain which makes it easier for you to view all your keys and to store your passphrase in the keychain so that you don\u0026rsquo;t have to keep typing it in all the time.\nYou can either download and install GPG Suite directly from their website or via Homebrew.\nTypically, I prefer to install applications via Homebrew\nbrew install --cask gpg-suite-no-mail However, after installation I encountered an issue where the gpg and gpg-agent versions would not match and this created problems for me when I try to sign my Git commits.\nIf you encounter this issue as well, you have to uninstall the version from Homebrew and directly install it from GPG Suite.\nDuring the installation process remember to remove GPG Mail.\n","permalink":"https://jsstrn.me/notes/install-gpg-tools/","summary":"You don\u0026rsquo;t actually need to install GPG Suite. You can access all your GPG keys via the gpg command line tool via your terminal.\nInstalling GPG Suite gives you the GPG Keychain which makes it easier for you to view all your keys and to store your passphrase in the keychain so that you don\u0026rsquo;t have to keep typing it in all the time.\nYou can either download and install GPG Suite directly from their website or via Homebrew.","title":"Installing GPG Suite on macOS"},{"content":"In case of emergency, please contact my personal insurance agent.\nHo Lik Koon Edwin  📱 Mobile: +65 9693 6039 ✉️ Email: edwin.ho@manulifefa.com.sg  ","permalink":"https://jsstrn.me/insurance/","summary":"In case of emergency, please contact my personal insurance agent.\nHo Lik Koon Edwin  📱 Mobile: +65 9693 6039 ✉️ Email: edwin.ho@manulifefa.com.sg  ","title":"Insurance"},{"content":"These are tips for the interview process from StashAway that are also applicable with other companies.\nDo your research Make sure you really understand what we do before you write your cover letter or hop on a call with us. We want to know that you’re making an intentional decision to apply to be a part of our team.\nMake sure your values align with ours While technical skills are non-negotiable, we also pay a lot of attention to whether you\u0026rsquo;ll be a good cultural fit for the team. We look for people who:\n Strive for excellence Get things done Communicate authentically, clearly, and effectively Build a positive and collaborative team Keep learning and improving Act with integrity, courage, and candour Maintain perspective and act accordingly  Be clear about how you want to contribute to the team Don’t apply for more than one role. Doing so will decrease your chances of getting hired. Be specific about what you want to do and how you want to contribute to the company.\nBe unapologetically yourself We want to get to know you, not just what’s on your CV. Bring your passions, quirks, and ideas to the conversations you have throughout your interview process.\nReference  StashAway careers  ","permalink":"https://jsstrn.me/notes/interview-tips-stashaway/","summary":"These are tips for the interview process from StashAway that are also applicable with other companies.\nDo your research Make sure you really understand what we do before you write your cover letter or hop on a call with us. We want to know that you’re making an intentional decision to apply to be a part of our team.\nMake sure your values align with ours While technical skills are non-negotiable, we also pay a lot of attention to whether you\u0026rsquo;ll be a good cultural fit for the team.","title":"Interview tips from StashAway"},{"content":"Using for...of This is the simplest approach to iterate over an array while still allowing you to break out of the loop.\nDo not confuse with for...in which is for iterating over objects.\nfor (const element of array) { // your code here } Using a for loop This is the most versatile approach as it allows you to control the starting index, increment value, range, etc.\nUse this approach if you\u0026rsquo;re not doing a straightforward iteration over an array. For example, if you need to start at a different index or if you need to go through the array in reverse.\nfor (let i = 0; i \u0026lt; array.length; i++) { // your code here } Using forEach The problem with this approach is that you may only skip to the next element with the return keyword, but you cannot break out of the loop.\nAs such, we generally avoid using this when we are writing solutions for interview questions because they may require us to exit early in order to optimize our solution.\narray.forEach((item, index, array) =\u0026gt; { // your code here }) ","permalink":"https://jsstrn.me/notes/js-iterate-over-array/","summary":"Using for...of This is the simplest approach to iterate over an array while still allowing you to break out of the loop.\nDo not confuse with for...in which is for iterating over objects.\nfor (const element of array) { // your code here } Using a for loop This is the most versatile approach as it allows you to control the starting index, increment value, range, etc.\nUse this approach if you\u0026rsquo;re not doing a straightforward iteration over an array.","title":"Iterate over an array in JavaScript"},{"content":"Update your packages It\u0026rsquo;s a good idea to periodically check that all your packages are updated. Head over to Package Manager, select Installed and update any packages as required.\nYou can also set up automatic updates from the settings within Package Manager and verify that Update packages automatically has been checked.\nUpdate DiskStation Manager (DSM) Open the Control Panel and navigate or search for Update \u0026amp; Restore. Next, update your DSM as required.\nDownload and manually install DiskStation Manager (DSM) Go to Download Center, select NAS as the product type and select the model of your Synology NAS server. Manually install DSM via Control Panel.\n","permalink":"https://jsstrn.me/notes/synology-update-packages/","summary":"Update your packages It\u0026rsquo;s a good idea to periodically check that all your packages are updated. Head over to Package Manager, select Installed and update any packages as required.\nYou can also set up automatic updates from the settings within Package Manager and verify that Update packages automatically has been checked.\nUpdate DiskStation Manager (DSM) Open the Control Panel and navigate or search for Update \u0026amp; Restore. Next, update your DSM as required.","title":"Keep your Synology NAS updated"},{"content":"Law of triviality occurs when members of a team give disproportionate weight to trivial issues when bigger issues are up for discussion.\nTo illustrate this law, Parkinson came up with a fictional story of a committee who had to approve plans for a nuclear power plant. The committee, however, preferred to discuss about a bike shed instead because the problem was easier to grasp. The term bike-shedding refers to this story.\nNot to be confused with Parkinson\u0026rsquo;s Law\n","permalink":"https://jsstrn.me/notes/adage-law-of-triviality/","summary":"When people give disproportionate weight to trivial matters","title":"Law of triviality"},{"content":"Multi-cursor editing Select your text, hit Shift-Command-L to select all occurences of the selection. Command-D to select them one at a time.\nAdd a new cursor above or below, Option-Command + up/down arrow keys.\nHit Escape key to exit multi-cursor mode.\nIntelliSense The default shortcut key to trigger suggestions is Control-Space or Fn-Control-Space. If this does not work, try the Option-Escape keys.\nLine actions To delete an entire line, hit Shift-Command-K or Command-X.\nThe latter works on any editor because it\u0026rsquo;s the standard cut keyboard shortcut. This means the deleted line is also in your clipboard, so just Command-V to paste it to another line.\nTo move an entire line, hit Option + up/down arrow keys. To duplicate an entire line, hit Shift-Option + up/down arrow keys.\nErrors and warnings Errors and warnings are denoted by colored squiggles in your code. You can hit F8 key to move to the problem. Hitting F8 again navigates to the next problem.\nFormatting To format the current document press Shift-Option-F. You can also set to format on save in settings.\nOpen the file by hitting Enter. To open in a split screen hit Control-Enter.\nInteractive playground VS Code has a tutorial to show some of its features. To open it, navigate to Help \u0026gt; Interactive Playground.\n","permalink":"https://jsstrn.me/notes/vscode-learn-to-use-more-efficiently/","summary":"Multi-cursor editing Select your text, hit Shift-Command-L to select all occurences of the selection. Command-D to select them one at a time.\nAdd a new cursor above or below, Option-Command + up/down arrow keys.\nHit Escape key to exit multi-cursor mode.\nIntelliSense The default shortcut key to trigger suggestions is Control-Space or Fn-Control-Space. If this does not work, try the Option-Escape keys.\nLine actions To delete an entire line, hit Shift-Command-K or Command-X.","title":"Learn to use VS Code more efficiently"},{"content":"We can limit the number of open editors in VS Code by configuring the following in settings:\n workbench.editor.limit.enabled: true – enable editor limit; default is false workbench.editor.limit.value: 1 – set number of open editors; default is 10 workbench.editor.limit.perEditorGroup: true – allow side-by-side panels; default is false  ","permalink":"https://jsstrn.me/notes/vscode-set-editor-limit/","summary":"We can limit the number of open editors in VS Code by configuring the following in settings:\n workbench.editor.limit.enabled: true – enable editor limit; default is false workbench.editor.limit.value: 1 – set number of open editors; default is 10 workbench.editor.limit.perEditorGroup: true – allow side-by-side panels; default is false  ","title":"Limit number of open editors in VS Code"},{"content":"After tracking my food intake for over a year and monitoring any side effects that I would feel after eating, I\u0026rsquo;ve discovered that I should avoid foods that contain lactose, capsaicin, gluten, alcohol, and caffeine (ranked by order of most severe reaction to least severe reaction).\nLactose  Milk Cheese Butter Ice-cream Cake Cream Pancake Yoghurt  Capsaicin  Chili Curry  Gluten  Wheat Rye Buckwheat Bread Noodles Ramen Udon Pasta Pancake Waffle Cereal Muesli Granola Cake Beer  Alcohol  Beer Cider Spirits Wine  Caffeine  Coffee Green tea Black tea Chocolate  ","permalink":"https://jsstrn.me/notes/list-of-foods-to-avoid/","summary":"After tracking my food intake for over a year and monitoring any side effects that I would feel after eating, I\u0026rsquo;ve discovered that I should avoid foods that contain lactose, capsaicin, gluten, alcohol, and caffeine (ranked by order of most severe reaction to least severe reaction).\nLactose  Milk Cheese Butter Ice-cream Cake Cream Pancake Yoghurt  Capsaicin  Chili Curry  Gluten  Wheat Rye Buckwheat Bread Noodles Ramen Udon Pasta Pancake Waffle Cereal Muesli Granola Cake Beer  Alcohol  Beer Cider Spirits Wine  Caffeine  Coffee Green tea Black tea Chocolate  ","title":"List of foods to avoid"},{"content":"TLDR; ⚠️ Note that this merge method will NOT work for an array of objects\nconst a = [1, 2, 3] const b = [3, 4, 5] const c = [...(new Set([...a, ...b]))] // =\u0026gt; [1, 2, 3, 4, 5] Breakdown of steps\n// merge with duplicates const m = [...a, ...b] // =\u0026gt; [1, 2, 3, 3, 4, 5]  // remove duplicates with set const s = new Set(m) // =\u0026gt; Set [1, 2, 3, 4, 5]  // convert set to array const c = [...s] // =\u0026gt; [1, 2, 3, 4, 5] Explanation Let\u0026rsquo;s say we have these two arrays that we would like to merge together.\nconst a = [1, 2, 3] const b = [3, 4, 5] One approach is to use .concat\nconst c = a.concat(b) // =\u0026gt; [1, 2, 3, 3, 4, 5] Another approach is to use destructuring\nconst c = [...a, ...b] // =\u0026gt; [1, 2, 3, 3, 4, 5] In both cases, the problem is that there are duplicates in the merge. To ensure that there are no duplicates, we can use a Set.\nconst c = new Set([...a, ...b]) // =\u0026gt; [1, 2, 3, 4, 5] However, now c is a Set instead of an Array.\nArray.isArray(c) // =\u0026gt; false To solve this, we can convert a Set into an Array with Array.from\nconst c = Array.from(new Set([...a, ...b])) // =\u0026gt; [1, 2, 3, 4, 5] Another way is to simply use the spread operator\nconst c = [...(new Set([...a, ...b]))] // =\u0026gt; [1, 2, 3, 4, 5] ","permalink":"https://jsstrn.me/notes/js-merge-arrays/","summary":"How to merge two or more arrays in JavaScript","title":"Merging arrays in JavaScript without duplicates"},{"content":"Multiple cursor before the first character of the next couple of lines\nfirst item second item third item last item  Move your cursor to the first character in the first line. Press v to enter into visual mode Press j until all the lines you want to edit have been selected Press I to enter into insert mode at the beginning of the line Type the text you want and hit Escape  My first item My second item My third item My last item ","permalink":"https://jsstrn.me/notes/vim-multiple-cursor/","summary":"Multiple cursor before the first character of the next couple of lines\nfirst item second item third item last item  Move your cursor to the first character in the first line. Press v to enter into visual mode Press j until all the lines you want to edit have been selected Press I to enter into insert mode at the beginning of the line Type the text you want and hit Escape  My first item My second item My third item My last item ","title":"Multiple cursors with Vim"},{"content":"The NATO phonetic alphabet\n A – Alpha B – Bravo C – Charlie D – Delta E – Echo F – Foxtrot G – Golf H – Hotel I – India J – Juliet K – Kilo L – Lima M – Mike N – November O – Oscar P – Papa Q – Quebec R – Romeo S – Sierra T – Tango U – Uniform V – Victor W – Whiskey X – X-Ray Y – Yankee Z – Zulu  Reference\n NATO phonetic alphabet  ","permalink":"https://jsstrn.me/notes/nato-phonetic-alphabet/","summary":"A reference to the NATO phonetic alphabet","title":"NATO phonetic alphabet"},{"content":"Navigation Command-P to quickly search and open a file.\nShift-Command-E to move your cursor to the Explorer pane then navigate with arrow keys, or start typing to search for a file.\nControl-- to navigate to a previously opened file Shift-Control-- to navigate forward.\nBreadcrumbs You can navigate anywhere within a file by clicking on the breadcrumbs.\nYou can also open other files directly from the breadcrumbs.\nReference  Code Navigation in VS Code  ","permalink":"https://jsstrn.me/notes/vscode-code-navigation/","summary":"Navigation Command-P to quickly search and open a file.\nShift-Command-E to move your cursor to the Explorer pane then navigate with arrow keys, or start typing to search for a file.\nControl-- to navigate to a previously opened file Shift-Control-- to navigate forward.\nBreadcrumbs You can navigate anywhere within a file by clicking on the breadcrumbs.\nYou can also open other files directly from the breadcrumbs.\nReference  Code Navigation in VS Code  ","title":"Navigation in VS Code"},{"content":"Though Vim is open sourced, Bram Moolenaar, the creator of Vim, is the primary contributor to the project.\nNeovim solves this by refactoring the code and allowing more contributors to participate in the development of the project.\nFor Mac users, you can install Neovim from Homebrew,\nbrew install neovim ","permalink":"https://jsstrn.me/notes/vim-neovim/","summary":"Though Vim is open sourced, Bram Moolenaar, the creator of Vim, is the primary contributor to the project.\nNeovim solves this by refactoring the code and allowing more contributors to participate in the development of the project.\nFor Mac users, you can install Neovim from Homebrew,\nbrew install neovim ","title":"Neovim"},{"content":"Parkinson’s Law states that \u0026ldquo;work expands so as to fill the time available for its completion.\u0026rdquo;\nNot to be confused with Parkinson\u0026rsquo;s Law of Triviality.\n","permalink":"https://jsstrn.me/notes/adage-parkinson-law/","summary":"Work expands to fill the time available for its completion","title":"Parkinson’s Law"},{"content":"Here\u0026rsquo;s a small sample from Zen of Python:\n Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Readability counts.  ","permalink":"https://jsstrn.me/notes/pep-20-zen-of-python/","summary":"Here\u0026rsquo;s a small sample from Zen of Python:\n Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Readability counts.  ","title":"PEP 20: Zen of Python"},{"content":"The Peter Principle states that people, in a company, are promoted to their “maximum level of incompetence.” This is because an employee is promoted based on the success of their previous job until they reach a level at which they are no longer competent.\n","permalink":"https://jsstrn.me/notes/adage-peter-principle/","summary":"People are promoted to their maximum level of incompetence","title":"Peter Principle"},{"content":"In my opinion, the best way to practice for technical interviews is to do mock interviews with someone.\nPramp is the best platform for online mock interviews. They allow you to schedule a session with another anonymous user and you each take turns to interview each other.\nBefore the session, you are given a problem which will be used to ask your interviewee. You attempt to solve it on your own, but if you are stuck there are hints and a suggested solution.\nYour interview partner will ask you a different problem. Once you\u0026rsquo;ve solved it, you switch roles and give them a problem to solve. After the session, you fill up a feedback form to give each other valuable feedback.\nThe community is really friendly and I\u0026rsquo;ve found the mock interviews and feedback incredibly helpful.\n","permalink":"https://jsstrn.me/notes/practice-mock-interviews-on-pramp/","summary":"In my opinion, the best way to practice for technical interviews is to do mock interviews with someone.\nPramp is the best platform for online mock interviews. They allow you to schedule a session with another anonymous user and you each take turns to interview each other.\nBefore the session, you are given a problem which will be used to ask your interviewee. You attempt to solve it on your own, but if you are stuck there are hints and a suggested solution.","title":"Practice with mock interviews on Pramp"},{"content":"React Query  has a very elegant API for fetching and caching data in React applications without getting tangled in global state.\nReference  Data fetching in Redux is painful, get rid of it now.  ","permalink":"https://jsstrn.me/notes/react-query/","summary":"Fetch, cache and update data in React applications","title":"React Query"},{"content":"Arrays  Strings are represented by arrays which is why you can usually run array methods on strings  Trees  Document Object Model uses a tree structure to represent an HTML page Git uses a tree structure to store its commit history Databases like MongoDB use B-trees for indexing  ","permalink":"https://jsstrn.me/notes/data-structures-real-world-applications/","summary":"Arrays  Strings are represented by arrays which is why you can usually run array methods on strings  Trees  Document Object Model uses a tree structure to represent an HTML page Git uses a tree structure to store its commit history Databases like MongoDB use B-trees for indexing  ","title":"Real world applications of data structures"},{"content":"RealWorld is a collection of repositories that have implemented a clone of Medium.com called Conduit in various libraries, frameworks, and programming languages.\nThe idea is to go beyond yet another todo list app and give you something that\u0026rsquo;s more realistic. You can also see a live demo of the application. There are separate frontend, backend, and fullstack solutions where you can explore how different implementations have structured their code. Some implementations may also have tests, though this is not required in the specifications.\nIf you\u0026rsquo;re just getting started with a new frontend framework, then you might want to check out the collection of repositories of TodoMVC instead.\n","permalink":"https://jsstrn.me/notes/real-world-app/","summary":"The mother of all demo apps","title":"RealWorld example applications"},{"content":"To reboot your Raspberry Pi, simply run the command\nsudo shutdown -r now Or even simpler\nsudo reboot ","permalink":"https://jsstrn.me/notes/raspi-restart/","summary":"How to restart your Raspberry Pi from the Terminal","title":"Reboot your Raspberry Pi"},{"content":"I\u0026rsquo;m not sure why this happened, but at some point I lost the ability to hold down on a key to repeat them.\nTo solve this, run the following command in a terminal. You may need to restart the terminal for it to work.\ndefaults write -g ApplePressAndHoldEnabled -bool false ","permalink":"https://jsstrn.me/notes/keyboard-repeat-keys-dont-work/","summary":"I\u0026rsquo;m not sure why this happened, but at some point I lost the ability to hold down on a key to repeat them.\nTo solve this, run the following command in a terminal. You may need to restart the terminal for it to work.\ndefaults write -g ApplePressAndHoldEnabled -bool false ","title":"Repeating keys stopped working in macOS"},{"content":"Let\u0026rsquo;s assume you have made three commits to your master branch.\nA - B - C (master) Move commits in C to staged with git reset --soft B where B is the commit hash.\nA - B - C (master) git reset --soft B A - B (master) C is in staged Move commits in C to unstaged with git reset B where B is the commit hash.\nA - B - C (master) git reset B A - B (master) C is in unstaged ⚠️ Exercise caution when doing this! Remove commits in C along with any other unstaged changes with git reset --hard B where B is the commit hash.\nA - B - C (master) git reset --hard B A - B (master) C has been discarded ","permalink":"https://jsstrn.me/notes/git-reset/","summary":"Reverting your changes in Git","title":"Reset changes in Git"},{"content":"Here are some popular resources for free illustrations\n unDraw ManyPixels DrawKit Icons8 illustrations  ","permalink":"https://jsstrn.me/notes/free-illustrations/","summary":"Here are some popular resources for free illustrations\n unDraw ManyPixels DrawKit Icons8 illustrations  ","title":"Resources for free illustrations"},{"content":"Here\u0026rsquo;s a curated list of resources to help prepare you for your next technical interview.\n Pramp – my personal favorite resource for mock interviews Tech Interview Handbook by Yangshun Tay Frontend Interview Handbook by Yangshun Tay Curated list of the top 75 LeetCode interview questions  ","permalink":"https://jsstrn.me/notes/resources-for-technical-interview/","summary":"Here\u0026rsquo;s a curated list of resources to help prepare you for your next technical interview.\n Pramp – my personal favorite resource for mock interviews Tech Interview Handbook by Yangshun Tay Frontend Interview Handbook by Yangshun Tay Curated list of the top 75 LeetCode interview questions  ","title":"Resources for technical interviews"},{"content":"The purpose of the prime directive is to ensure that everyone in the team understands that this process is not about finding fault with others or to blame others for issues brought up during the retrospective.\n Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand.  \u0026ndash; The Retrospective Prime Directive\n","permalink":"https://jsstrn.me/notes/retrospective-prime-directive/","summary":"The purpose of the prime directive is to ensure that everyone in the team understands that this process is not about finding fault with others or to blame others for issues brought up during the retrospective.\n Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand.","title":"Retrospective Prime Directive"},{"content":"Often times I find myself wanting to run a bit of JavaScript code to check if it\u0026rsquo;s working properly. I do this with my notes or when I\u0026rsquo;m trying to understand something I\u0026rsquo;ve read online.\nTypically, I would use the console on my browser, but that has its limitations. There are also online tools like JSFiddle, CodePen, and Replit. However, these tools tend to be geared towards frontend development with HTML and CSS, and some even require you to login just to use their service.\nI found a better solution is to use RunJS. It supports both JavaScript and TypeScript, has access to both Node.js and Web APIs, and generates live feedback as you type. Being a desktop application it\u0026rsquo;s also a lot faster to access then an online tool.\nRunJS works on Linux, Mac, and Windows. On macOS, install with Homebrew,\nbrew install --cask runjs ","permalink":"https://jsstrn.me/notes/javascript-typescript-scratchpad-runjs/","summary":"Often times I find myself wanting to run a bit of JavaScript code to check if it\u0026rsquo;s working properly. I do this with my notes or when I\u0026rsquo;m trying to understand something I\u0026rsquo;ve read online.\nTypically, I would use the console on my browser, but that has its limitations. There are also online tools like JSFiddle, CodePen, and Replit. However, these tools tend to be geared towards frontend development with HTML and CSS, and some even require you to login just to use their service.","title":"Run JavaScript and TypeScript with RunJS"},{"content":"Very often I come across a situation where I\u0026rsquo;d like to only run a certain subset of tests in a describe block, usually when I\u0026rsquo;m trying to debug some code.\nLet\u0026rsquo;s say the describe block you want to run contains the word \u0026ldquo;Fizz Buzz\u0026rdquo;\ndescribe(\u0026#39;Fizz Buzz\u0026#39;, () =\u0026gt; { // your tests here }) You can run all describe blocks that match a regex pattern\njest --testNamePattern \u0026#39;Fizz Buzz\u0026#39; Or simply use the alias -t instead\njest -t \u0026#39;Fizz Buzz\u0026#39; Reference: Jest CLI documentation\n","permalink":"https://jsstrn.me/notes/jest-match-name-tests/","summary":"How to run tests that only match the name in the describe block","title":"Run Jest tests that match a describe block"},{"content":"If you use your GPG key to sign your commits you will have to key in your passphrase each time you make a new commit. You can save your passphrase to Keychain with the help of Pinentry Mac.\nInstall pinentry-mac from Homebrew\nbrew install pinentry-mac Open the configuration file to your gpg-agent located at ~/.gnupg/gpg-agent.conf and set your pinentry-program to pinentry-mac\nvim ~/.gnupg/gpg-agent.conf pinentry-program /usr/local/bin/pinentry-mac Restart gpg-agent\ngpgconf --kill all Now when you are prompted to type in your passphrase for your GPG key, it will use Pinentry Mac with the option to \u0026ldquo;Save in Keychain.\u0026rdquo;\n","permalink":"https://jsstrn.me/notes/gpg-save-passphrase-to-keychain/","summary":"If you use your GPG key to sign your commits you will have to key in your passphrase each time you make a new commit. You can save your passphrase to Keychain with the help of Pinentry Mac.\nInstall pinentry-mac from Homebrew\nbrew install pinentry-mac Open the configuration file to your gpg-agent located at ~/.gnupg/gpg-agent.conf and set your pinentry-program to pinentry-mac\nvim ~/.gnupg/gpg-agent.conf pinentry-program /usr/local/bin/pinentry-mac Restart gpg-agent\ngpgconf --kill all Now when you are prompted to type in your passphrase for your GPG key, it will use Pinentry Mac with the option to \u0026ldquo;Save in Keychain.","title":"Save your GPG key passphrase to Keychain"},{"content":"It is often recommended to install updates before installing other packages, we can create a Cron job that will run these commands on a daily basis.\nList existing Cron jobs\ncrontab -l Create a new Cron job\ncrontab -e Now add this line to the crontab which will run daily at midnight\n0 0 * * * sudo apt update \u0026amp;\u0026amp; sudo apt --yes upgrade Reference  Scheduling tasks with Cron  ","permalink":"https://jsstrn.me/notes/raspi-schedule/","summary":"How to schedule a Cron job on your Raspberry Pi","title":"Schedule a Cron job on Raspberry Pi"},{"content":"Learn  Awesome AppSec - curated list of resources for learning about application security Damn Vulnerable Web App (DVWA) - a vulnerable web application used for security training OWASP Juice Shop - a vulnerable web application used for security training OWASP Node Goat - a vulnerable web application used for security training with tutorials XCS100: Introduction to Web Security - a free introductory course to web security by Stanford University Offensive Security  News  Insecure.org – offers security news and other security resources OWASP Top 10 - the top 10 web application security risks according to the Open Web Application Security Project (OWASP) SecLists.org – archive of the most common security mailing lists  Tools  Kali Linux - a operating system focused on penetration testing and bundled with thousands of security tools SecTools.org – the top 100 network security tools Nmap.org – host of the Nmap security scanner and its documentation  ","permalink":"https://jsstrn.me/notes/security-tools/","summary":"Learn  Awesome AppSec - curated list of resources for learning about application security Damn Vulnerable Web App (DVWA) - a vulnerable web application used for security training OWASP Juice Shop - a vulnerable web application used for security training OWASP Node Goat - a vulnerable web application used for security training with tutorials XCS100: Introduction to Web Security - a free introductory course to web security by Stanford University Offensive Security  News  Insecure.","title":"Security tools and resources"},{"content":"Here we want to create functions that allow us to count up and down a variable with a lower bound of 0.\nWe can achieve this easily with Math.max() which returns the higher of two values. So now if count falls below 0 it will default to 0 because Math.max(-1, 0) is 0.\ncountDown = (count, min = 0) =\u0026gt; Math.max(count - 1, min) countDown(1) // =\u0026gt; 0 countDown(-1) // =\u0026gt; 0 Similarly, if you had to set the upper bound limit of a variable, you would use Math.min() because this would choose the smaller of the two numbers – Math.min(101, 100) is 100.\ncountUp = (count, max = 100) =\u0026gt; Math.min(count + 1, max) countUp(99) // =\u0026gt; 100 countUp(101) // =\u0026gt; 100 Reference  Math.min() – MDN Math.max() – MDN  ","permalink":"https://jsstrn.me/notes/js-math-min-max/","summary":"Use Math.min() and Math.max() to set the upper and lower bound limits of a variable","title":"Set the lower and upper bound limits of a variable in JavaScript"},{"content":"Let\u0026rsquo;s say I\u0026rsquo;d like to set the width of an image to 20% of the viewport width.\nimg { width: 20vw; } The problem now is that when we look at the website on mobile devices it appears way too small because the viewport is much smaller.\nOne solution might be to use media queries, but it\u0026rsquo;s actually not necessary in this case. We can actually set the min-width to be a certain value so that it will not be any smaller.\nimg { width: 20vw; min-width: 200px; } That\u0026rsquo;s great! A simple solution without having to use media queries. In fact, there\u0026rsquo;s a shorter way to represent this by using max() which takes the largest value of a list of values.\nimg { width: max(20vw, 200px); } For instance, max(100px, 200px, 300px) will always yield 300px since this is the largest. It becomes useful when using relative values like viewport width that can vary depending on the device.\nReference  Flexible layouts without media queries max() – MDN  ","permalink":"https://jsstrn.me/notes/css-set-width-without-media-queries/","summary":"Let\u0026rsquo;s say I\u0026rsquo;d like to set the width of an image to 20% of the viewport width.\nimg { width: 20vw; } The problem now is that when we look at the website on mobile devices it appears way too small because the viewport is much smaller.\nOne solution might be to use media queries, but it\u0026rsquo;s actually not necessary in this case. We can actually set the min-width to be a certain value so that it will not be any smaller.","title":"Set width in CSS without media queries"},{"content":"NAS server If you have a NAS server, you can install Plex or Emby as your media server. Both Plex and Emby have clients for Apple TV and other devices.\nRaspberry Pi If you have a Raspberry Pi, its relatively simple to turn it into a media server with OSMC and connect it directly to a TV. The downside is that you\u0026rsquo;ll need to use a keyboard to navigate around.\nDIY The new kid on the block is Jellyfin – an open source fork of Emby.\nTo install Jellyfin on a Raspberry Pi, you can follow instructions for Debian.\nThere\u0026rsquo;s even instructions to install Jellyfin on a Synology NAS server with Docker. Just keep in mind that you\u0026rsquo;ll need to be on DSM 7.\nThey support numerous clients, except for Apple TV. For that you have to access your content with third-party applications like Infuse or MrMC.\n","permalink":"https://jsstrn.me/notes/setting-up-home-media-server/","summary":"NAS server If you have a NAS server, you can install Plex or Emby as your media server. Both Plex and Emby have clients for Apple TV and other devices.\nRaspberry Pi If you have a Raspberry Pi, its relatively simple to turn it into a media server with OSMC and connect it directly to a TV. The downside is that you\u0026rsquo;ll need to use a keyboard to navigate around.","title":"Setting up a home media server"},{"content":"Setup a home media server with Synology\u0026rsquo;s Video Station.\nDownload DS Video to watch your videos on Apple TV and iOS.\n","permalink":"https://jsstrn.me/notes/synology-setup-media-server-with-video-station/","summary":"Setup a home media server with Synology\u0026rsquo;s Video Station.\nDownload DS Video to watch your videos on Apple TV and iOS.","title":"Setup a home media server with Video Station on Synology NAS"},{"content":"Go to Package Center and install Web Station. Now you should be able to see a default webpage when you visit http://\u0026lt;your-ip-address\u0026gt; or http://\u0026lt;server-name\u0026gt;.local (the default port is 80).\nTo edit the webpage, go to the web directory in your File Station.\nNote that the website is only accessible within your local network. If you want to be access it via the internet you\u0026rsquo;ll need to setup DDNS.\n","permalink":"https://jsstrn.me/notes/synology-setup-web-server/","summary":"Go to Package Center and install Web Station. Now you should be able to see a default webpage when you visit http://\u0026lt;your-ip-address\u0026gt; or http://\u0026lt;server-name\u0026gt;.local (the default port is 80).\nTo edit the webpage, go to the web directory in your File Station.\nNote that the website is only accessible within your local network. If you want to be access it via the internet you\u0026rsquo;ll need to setup DDNS.","title":"Setup a local web server with a Synology NAS"},{"content":"Plex is no longer listed as a third-party package on Package Manager for DSM 7.0 and the one that is listed for DSM 6.2 is outdated, so you have to manually install the media server.\nDownload Plex media server for Synology and manually install the package with Package Manager.\nIf you\u0026rsquo;re on DSM 7.0 you might not be able to find Plex media server in the Package Center, you can either manually install it or try Emby as an alternative.\nYou can download content with Synology\u0026rsquo;s Download Station and add them to the Plex directory. Use any Plex client to enjoy your content.\n","permalink":"https://jsstrn.me/notes/synology-setup-plex-media-server/","summary":"Plex is no longer listed as a third-party package on Package Manager for DSM 7.0 and the one that is listed for DSM 6.2 is outdated, so you have to manually install the media server.\nDownload Plex media server for Synology and manually install the package with Package Manager.\nIf you\u0026rsquo;re on DSM 7.0 you might not be able to find Plex media server in the Package Center, you can either manually install it or try Emby as an alternative.","title":"Setup Plex media server on your Synology NAS"},{"content":"Just press Control-Command-Space on your keyword to open up the Emoji \u0026amp; Symbols window. Select or search for an emoji.\nClick the small icon to the right of the search bar to bring up the character viewer to select more symbols.\n","permalink":"https://jsstrn.me/notes/macos-emoji-and-symbols/","summary":"Just press Control-Command-Space on your keyword to open up the Emoji \u0026amp; Symbols window. Select or search for an emoji.\nClick the small icon to the right of the search bar to bring up the character viewer to select more symbols.","title":"Shortcut key to insert emoji and symbols on macOS"},{"content":"Install GPG Tools Install GPG Tools with Homebrew. This will install the GPG Keychain\nbrew install --cask gpg-suite-no-mail Generate a GPG key pair If you don\u0026rsquo;t have one already, you will need to create a GPG key pair. Follow the instructions to create your key pair.\ngpg --full-gen-key Set a strong passphrase for your private key and store it in your password manager.\nUse the email address associated with your account on GitHub account. Tip you can use the noreply email address username@users.noreply.github.com.\nAdd public key to GitHub The easiest way to retrieve the public key is with the GPG Keychain. Select the key, right click and select Copy. Now paste this in your GitHub settings.\nYour public key should look something like this\n-----BEGIN PGP PUBLIC KEY BLOCK----- -----END PGP PUBLIC KEY BLOCK----- Tell Git about your GPG key List all your secret keys and display the key ID in long form\ngpg --list-secret-keys --keyid-format=long Copy the long form of the GPG key ID.\nsec 4096R/\u0026lt;YOUR-GPG-KEY-ID\u0026gt; 2016-03-10 [expires: 2017-03-10] uid [ultimate] YOUR NAME \u0026lt;youe@email.com\u0026gt; ssb 4096R/42B317FD4BA89E7A 2016-03-10 Next, add your GPG key ID to your local Git configuration\ngit config --local user.signingkey \u0026lt;YOUR-GPG-KEY-ID\u0026gt; Of course, you can set this globally with the --global flag, but it might not be a good idea to do this in case you have more than one key used for different purposes (e.g. personal and work).\nSigning your commits To sign your commits via the terminal\ngit commit -S -m \u0026#34;Your commit message\u0026#34; Set commit signing by default (optional) To sign commits by default in a local repository\ngit config --local commit.gpgsign true Again, you could set this globally with the global flag, but it may not be a wise to do so if you have both personal and work projects on the same computer.\nTest to see if it all works To check if you are now able to sign with your default key\necho \u0026#34;test\u0026#34; | gpg --clearsign To use a different key append --local-user or -u\necho \u0026#34;test\u0026#34; | gpg --clearsign --local-user \u0026lt;YOUR-GPG-KEY-ID\u0026gt; If it works, you should get a prompt to enter your passphrase and the corresponding hash output.\nStoring your GPG key pair If you lose the GPG private key then you can no longer sign your commits with that key. You must remove the public key from your GitHub account and generate a new one.\nTo prevent this from happening, store your GPG private keys in a secure encrypted vault. You can use tools like Veracrypt or Cryptomator to create encrypted volumes.\nReference  Generating a new GPG key Signing commits Telling Git about your GPG key  ","permalink":"https://jsstrn.me/notes/git-sign-commits/","summary":"How to sign your Git commits with a GPG key","title":"Sign your commits"},{"content":"We can sort an array of objects with the Array.prototype.sort().\nKeep in mind that sort() sorts elements in place, which means it manipulates the original array. So you have to make a copy of the array if you want to retain the original order of the array.\nconst copiedArray = [...originalArray]; Let\u0026rsquo;s say you have an array of people with name and age properties.\nconst people = [ { name: \u0026#34;Bob\u0026#34;, age: 32, }, { name: \u0026#34;Alice\u0026#34;, age: 42, }, { name: \u0026#34;Charlie\u0026#34;, age: 22, }, ]; We can sort them alphabetically by name by having the callback function return -1, 0, or 1.\npeople.sort((a, b) =\u0026gt; { // ignore case  const nameA = a.name.toLowerCase(); const nameB = b.name.toLowerCase(); if (nameA \u0026gt; nameB) { return 1; // a should come after b  } if (nameA \u0026lt; nameB) { return -1; // a should come before b  } return 0; // both are equal }); We can also sort them by age.\npeople.sort((a, b) =\u0026gt; { const ageA = a.age const ageB = b.age if (ageA \u0026gt; ageB) { return 1; // a should come after b  } if (ageA \u0026lt; ageB) { return -1; // a should come before b  } return 0; // both are equal }); ","permalink":"https://jsstrn.me/notes/javascript-sort-array-objects/","summary":"We can sort an array of objects with the Array.prototype.sort().\nKeep in mind that sort() sorts elements in place, which means it manipulates the original array. So you have to make a copy of the array if you want to retain the original order of the array.\nconst copiedArray = [...originalArray]; Let\u0026rsquo;s say you have an array of people with name and age properties.\nconst people = [ { name: \u0026#34;Bob\u0026#34;, age: 32, }, { name: \u0026#34;Alice\u0026#34;, age: 42, }, { name: \u0026#34;Charlie\u0026#34;, age: 22, }, ]; We can sort them alphabetically by name by having the callback function return -1, 0, or 1.","title":"Sort an array of objects"},{"content":"SpaceVim is a Vim distribution inspired by spacemacs.\nSpaceVim is not a GUI. After installing SpaceVim, it will alter the configuration of Vim and Neovim with sensible defaults.\nThis means that when you launch Vim or Neovim you will now get SpaceVim instead.\n","permalink":"https://jsstrn.me/notes/vim-spacevim/","summary":"SpaceVim is a Vim distribution inspired by spacemacs.\nSpaceVim is not a GUI. After installing SpaceVim, it will alter the configuration of Vim and Neovim with sensible defaults.\nThis means that when you launch Vim or Neovim you will now get SpaceVim instead.","title":"SpaceVim"},{"content":"It\u0026rsquo;s not uncommon to make several commits during the course of developing your feature. When it\u0026rsquo;s time to push your code you want to combine all of your commits into one logical commit.\nWhen making pull requests and submitting code for review, it\u0026rsquo;s easier for others to view all of our changes in one commit rather than have them all scattered in numerous commits. To do this, we want to squash all our commits into one commit.\nFirst, we want to select the commits we want to squash. In this case, I\u0026rsquo;ve selected the last 3 commits,\ngit rebase -i HEAD~3 If Git complains that we have unstaged commits then we can either commit or stash them.\nWe will be presented with the selected commits in our default text editor.\npick 2082d3d Keep this commit pick 98e5cdb Squash this commit pick a114cad Squash this commit, too To squash them, change the commits from pick to squash\npick 2082d3d Keep this commit squash 98e5cdb Squash this commit squash a114cad Squash this commit, too Next, you will be asked to add a new commit message and delete any unwanted commit messages from the squashed commits.\nWe\u0026rsquo;re done. Let\u0026rsquo;s check our commit log before pushing our changes.\ngit log --oneline git push Note that if these commits had previously been pushed to your remote branch, you will need to force push them.\ngit push --force ","permalink":"https://jsstrn.me/notes/git-squash-commits/","summary":"It\u0026rsquo;s not uncommon to make several commits during the course of developing your feature. When it\u0026rsquo;s time to push your code you want to combine all of your commits into one logical commit.\nWhen making pull requests and submitting code for review, it\u0026rsquo;s easier for others to view all of our changes in one commit rather than have them all scattered in numerous commits. To do this, we want to squash all our commits into one commit.","title":"Squash your commits"},{"content":"First, we have to assign a static IP address to the Raspberry Pi on your home router. Most home routers will allow you to do this. Read your home router manual to learn how to do this.\nNow you can access the Raspberry Pi remotely via SSH ssh \u0026lt;username\u0026gt;@\u0026lt;ip-address\u0026gt;\nFor example, if you gave 192.168.1.123 to your Pi, then you can connect to your machine like so\nssh pi@192.168.1.123 The default username is pi and the default password is raspberry. For security reasons, you should change your password.\n","permalink":"https://jsstrn.me/notes/raspi-ssh/","summary":"How to SSH into a Raspberry Pi","title":"SSH into a Raspberry Pi"},{"content":" Create 3 copies of your data – 1 primary and 2 backup copies Have 2 types of storage mediums – Store 1 of these backups offsite  Let\u0026rsquo;s say you have some files on your computer. You want to make a backup copy of your files on an external hard disk drive and have another copy on a cloud storage.\nThere are 3 copies of your data – your computer, hard disk, and cloud. You\u0026rsquo;ve stored your data on at least 2 storage mediums – an external disk and in the cloud. You have one backup offsite in the cloud.\n","permalink":"https://jsstrn.me/notes/3-2-1-backup-rule/","summary":"Create 3 copies of your data – 1 primary and 2 backup copies Have 2 types of storage mediums – Store 1 of these backups offsite  Let\u0026rsquo;s say you have some files on your computer. You want to make a backup copy of your files on an external hard disk drive and have another copy on a cloud storage.\nThere are 3 copies of your data – your computer, hard disk, and cloud.","title":"The 3-2-1 backup rule"},{"content":"This two character sequence #! is called shebang. It is used in shell scripts to determine which interpreter should be used to run the script.\nI personally like to remember #! as hash (#) and bang (!).\nAccording to Wikipedia:\n The name shebang for the distinctive two characters may have come from an inexact contraction of SHArp bang or haSH bang, referring to the two typical Unix names for them. Another theory on the sh in shebang is that it is from the default shell sh, usually invoked with shebang.\n ","permalink":"https://jsstrn.me/notes/shebang-origin/","summary":"Why #! is called shebang","title":"The origin of the name shebang"},{"content":"In the Algorithm Design Manual, Skiena explains that there are two types of data structures – contiguous and linked data structures. Their distinction being how they are stored in memory.\n  Contiguous data structures are composed of a single slab of memory, and include arrays, hash tables, matrices, and heaps.\n  Linked data structures are composed of distinct chunks of data bound together by pointers, and include linked-lists, trees, and graphs.\n   Under the hood, heaps are actually arrays with an implicit binary tree structure. Hash tables are represented by an array of linked-lists while matrices use an array of arrays to represent them. Since they all use arrays they are all contiguous data structures.\n","permalink":"https://jsstrn.me/notes/data-structures-types/","summary":"In the Algorithm Design Manual, Skiena explains that there are two types of data structures – contiguous and linked data structures. Their distinction being how they are stored in memory.\n  Contiguous data structures are composed of a single slab of memory, and include arrays, hash tables, matrices, and heaps.\n  Linked data structures are composed of distinct chunks of data bound together by pointers, and include linked-lists, trees, and graphs.","title":"Types of data structures"},{"content":"Update your Raspberry Pi Update the list of packages\nsudo apt update Then upgrade the packages\nsudo apt upgrade This will ask if you want to upgrade packages.\nIf you want to upgrade without being prompted, you can add the --yes flag to the command\nsudo apt --yes upgrade ","permalink":"https://jsstrn.me/notes/raspi-update/","summary":"How to update your Raspberry Pi","title":"Update your Raspberry Pi"},{"content":"Using Vim commands allows us to reduce the number of times we need to lift our hands away from the keyboard to reach for your mouse.\nWhile most code editors typically support Vim commands, we can\u0026rsquo;t say the same for most other applications. Luckily, with browser extensions, we are able to use Vim commands in the browser.\nInstall the Vim Vixen browser extension to use Vim commands.\nSome useful commands to remember:\nNavigation\n  j/k – scroll up/down on a page\n  h/l – scroll left/right on a page\n  J/K – go to previous/next tab\n  H/L – go to previous/next page in history\n  gg/G – scroll to top/bottom of a page\n  f – reveal links on a page\n  Tab actions\n r – reload current tab d – delete current tab u – undo deleted tab b – browse opened tabs  ","permalink":"https://jsstrn.me/notes/vim-browser-extension/","summary":"Using Vim commands allows us to reduce the number of times we need to lift our hands away from the keyboard to reach for your mouse.\nWhile most code editors typically support Vim commands, we can\u0026rsquo;t say the same for most other applications. Luckily, with browser extensions, we are able to use Vim commands in the browser.\nInstall the Vim Vixen browser extension to use Vim commands.\nSome useful commands to remember:","title":"Use Vim-like commands in Firefox"},{"content":"Settings :set nu – short for :set number to show line numbers :set rnu – short for :set relativenumber to show relative numbers\nModes Esc – command mode (default mode)\ni – insert mode (before cursor)\na – insert mode (after cursor)\nv – visual mode to select text to y (yank) or d (delete) text\nQuiting Vim :q – quit\n:q! – quit without saving\n:wq – save and quit\n:ZZ – save and quit\nUndo and redo u – undo the previous command\nU – undo the whole line\nCtrl + R – redo the previous command\nCopy and paste yw – yank (copy) a word\nyy – yank (copy) the entire line\ny$ – yank from cursor position to end of line\nyG – yank from cursor position to end of file\np – to put or paste the text that was copied or deleted\nDelete x – delete a character\ndw – delete word\ndd – delete line\nd$ – delete from cursor to end of line\ncw – change word; this will delete the word and put you in insert mode\nNavigation h – move left\nl – move right\nj – move down\nk – move down\n0 – move to start of line\n$ – move to end of line\nnG – move to line number where n is the line number (e.g. 54G goes to line 54)\n[[ – move to start of file\n]] – move to end of file\n","permalink":"https://jsstrn.me/notes/vim-commands/","summary":"A list of the most commonly used Vim commands","title":"Useful Vim commands"},{"content":"With most remote Git servers such as GitHub and GitLab, you will see both SSH and GPG keys and you might be wondering what they are used for.\nSSH keys SSH keys are used for authenticating with the remote Git server without you requiring to key in your username and password.\nWe want to associate an SSH key with your computer\u0026rsquo;s identity so generate an SSH key for each device. In the event that you lose your computer, you can revoke the SSH key and commits coming from that device will no longer be allowed.\nIf you replace your machine with a new one just delete the old SSH key and generate a new one. If you format your machine, you will lose your SSH key and that is fine. Just replace it with a new one.\nGPG keys GPG keys are used to digitally sign each commit so that you can prove that the commit is actually coming from you and not someone else.\nUnlike SSH keys, we want to associate a GPG key with your identity. So you should use the same GPG key to sign all your commits regardless of which device you\u0026rsquo;re committing from.\nThis requires that you store your GPG key securely so that you can use them on several devices at the same time. While there are many ways to back up your GPG keys securely, I find that the most convenient way is to store them in an encrypted vault.\n","permalink":"https://jsstrn.me/notes/gpg-ssh-keys/","summary":"With most remote Git servers such as GitHub and GitLab, you will see both SSH and GPG keys and you might be wondering what they are used for.\nSSH keys SSH keys are used for authenticating with the remote Git server without you requiring to key in your username and password.\nWe want to associate an SSH key with your computer\u0026rsquo;s identity so generate an SSH key for each device. In the event that you lose your computer, you can revoke the SSH key and commits coming from that device will no longer be allowed.","title":"Using SSH and GPG keys"},{"content":"Avoid blindly staging code with git add --all or git add . as you may accidentally stage and commit code that you didn\u0026rsquo;t intend to.\nI prefer to use --patch or -p when adding code to staging. This allows you to go through your changes and review them by hunks.\ngit add -p Since new files are not tracked they will not show up in --patch so you have to use --intent-to-add or -N to track those files before you can use --patch.\ngit add -N \u0026lt;new-filename\u0026gt; git add -p You will see changes marked with + or - to indicate if code has been added or deleted. You\u0026rsquo;ll be prompted as such.\n(1/1) Stage this hunk [y,n,q,a,d,e,?]? Typically, you reply with y to stage the hunk or n to ignore it. Sometimes we want to stage the entire file without looking at the remaining hunks in the file, we can do this with a. This is useful for files like package-lock.json.\nWe can manually edit e which lines to add or remove in each hunk. When in edit mode you will make your changes in vim. To remove '+' lines just delete them. To remove '-' lines, just change them to ' '.\nUse ? to display this help screen if you ever forget what the commands stand for.\ny - stage this hunk n - do not stage this hunk q - quit; do not stage this hunk or any of the remaining ones a - stage this hunk and all later hunks in the file d - do not stage this hunk or any of the later hunks in the file e - manually edit the current hunk ? - print help Once you have reviewed all your changes. You can commit your changes as usual.\ngit commit -m \u0026#34;Some meaningful commit message\u0026#34; ","permalink":"https://jsstrn.me/notes/git-commit/","summary":"Review code changes before staging and committing","title":"View changes before committing"},{"content":"One way to review code changes that are unstaged is to use the following command.\ngit diff Note that untracked files will not be shown. You have to add untracked files before they will show up.\ngit add -N \u0026lt;untracked-file\u0026gt; You can also see a summary of what has changed with --stat\ngit diff --stat This command is useful to check for trailing white space and merge conflict markers.\ngit diff --check You can use this command if you\u0026rsquo;ve already staged your changes. This is useful before you make a commit.\ngit diff --staged ","permalink":"https://jsstrn.me/notes/git-diff/","summary":"View code changes with \u003ccode\u003egit diff\u003c/code\u003e","title":"View code changes"},{"content":"You can actually view any public Telegram channel without requiring a Telegram account.\nTypically, public channels on Telegram follow this pattern t.me/\u0026lt;channel-name\u0026gt;. For example, t.me/jesstern will direct you to my public channel. However, you need to have a Telegram account to view the channel.\nPublic channels on Telegram can also be viewed without a Telegram account if you include a /s/ before the channel name. The pattern is as follows t.me/s/\u0026lt;channel-name\u0026gt;. For example, t.me/s/jesstern can be viewed directly in your web browser.\nNow you can enjoy Daily Dad Jokes and BBC Earth Daily even if you don\u0026rsquo;t have Telegram.\n","permalink":"https://jsstrn.me/notes/telegram-public-channel/","summary":"Make any public Telegram channel viewable outside of Telegram","title":"View public Telegram channels without a Telegram account"},{"content":"To watch for file changes and only run tests related to changed files. This requires that your project is a Git repository.\njest --watch To watch for file changes and run all tests. This does not require that your project be a Git repository.\njest --watchAll We often add this to our npm scripts\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;jest\u0026#34;, \u0026#34;test:watch\u0026#34;: \u0026#34;jest --watch\u0026#34; } } Reference: Jest CLI documentation\n","permalink":"https://jsstrn.me/notes/jest-run-tests-watch/","summary":"How to run your tests as your files change in Jest","title":"Watch for file changes as you run your tests"},{"content":"We, the Citizen is Kirsten Han\u0026rsquo;s newsletter that covers topics related to Singapore from a rights-based perspective.\nKirsten Han was the editor-in-chief for New Naratif and deputy editor for the now defunct The Online Citizen. She wrote The Silhouette of Oppression and published by Epigram Books.\n","permalink":"https://jsstrn.me/notes/newsletters-we-the-citizens/","summary":"Kirsten Han\u0026rsquo;s newsletter covering Singapore from a rights-based perspective.","title":"We, the Citizens"},{"content":"In JavaScript, all values are truthy unless they are defined as falsy. Here\u0026rsquo;s a complete list of falsy values.\nAny value that isn\u0026rsquo;t falsy is by definition truthy. This means that an empty array [] or an empty object {} or a negative number are all considered truthy, but an empty string \u0026quot;\u0026quot; is falsy.\nConsider the following example,\nconst name = \u0026#34;\u0026#34;; if (!name) { // your code here } While the code above works for checking for an empty string, the same cannot be said when checking for an empty array.\nconst fruits = []; if (!fruits) { // your code here } Here we are trying to check if fruits is an empty array. We cannot rely on type coercion in boolean context to check if fruits is an empty array.\nconst fruits = []; if (fruits.length === 0) { // your code here } This is also why we should not use truthy matchers in test assertions.\n","permalink":"https://jsstrn.me/notes/js-all-values-truthy/","summary":"In JavaScript, all values are truthy unless they are defined as falsy. Here\u0026rsquo;s a complete list of falsy values.\nAny value that isn\u0026rsquo;t falsy is by definition truthy. This means that an empty array [] or an empty object {} or a negative number are all considered truthy, but an empty string \u0026quot;\u0026quot; is falsy.\nConsider the following example,\nconst name = \u0026#34;\u0026#34;; if (!name) { // your code here } While the code above works for checking for an empty string, the same cannot be said when checking for an empty array.","title":"What are truthy values in JavaScript?"},{"content":"There are three main types of switches to choose from:\nTactile Tactile switches are the most suitable ones for most users. They require a bit more force to activate the keys and therefore reduce accidental typos.\nThis is my preferred choice.\nClicky Clicky switches are a type of tactile switch that emit an audible click sound when pressed. This may not be suitable when working in an office space as the typing can get loud and annoying.\nLinear Linear switches have no feedback when pressed and are more suitable for gamers. Accidentally hitting a key will activate it which results in more typos, but is acceptable for gaming as speed is more important than accuracy.\nConclusion If you\u0026rsquo;re new to mechanical keyboard switches and don\u0026rsquo;t know which one to get, then I would suggest getting tactile switches. They are the most versatile and suitable for both regular typing and gaming.\n","permalink":"https://jsstrn.me/notes/mechanical-keyboards/","summary":"Choosing between the different types of mechanical keyboard switches?","title":"Which mechanical keyboard switch should I choose?"},{"content":"This two-characters sequence #! is called a shebang. It is used in shell scripts to determine which interpreter should be used to run the script.\nIt\u0026rsquo;s a good idea to include a shebang #! at the top of a Bash file. This is so that the sript runs correctly regardless of what shell the user is running.\nFor example, if a user is using the zsh shell, the script would default to zsh syntax instead of the intended bash syntax. Adding a shebang prevents this issue.\nThis also means you don\u0026rsquo;t have to include the .sh file extension.\n#!/usr/bin/env bash Reference: What is the preferred bash shebang\n","permalink":"https://jsstrn.me/notes/bash-shebang/","summary":"Add a shebang to the top of your Bash scripts","title":"Which shebang to use to run Bash scripts?"},{"content":"Here\u0026rsquo;s a good illustration why you should always use strict equality – JavaScript\u0026rsquo;s equality table.\n","permalink":"https://jsstrn.me/notes/js-equality-table/","summary":"JavaScript equality table","title":"Why you should always use strict equality"},{"content":"Ingredients  green or black tea (decaf for non-caffeinated version) mint leaves lime lemon lemongrass  Preparation Prepare ingredients  crush some mint leaves squeeze some fresh lime and lemon juice cut some lime and lemon into wedges  Prepare cold brew tea  add two tea bags to a jug of water add crushed mint leaves add squeezed lime and lemon juice add lemongrass leave in the fridge overnight  Serve  pour into a glass add fresh mint leaves add a stick of lemongrass drink with a straw  ","permalink":"https://jsstrn.me/recipes/zesty-cold-brew-tea/","summary":"My recipe for a refreshing zesty cold brew tea","title":"Zesty cold brew tea"}]