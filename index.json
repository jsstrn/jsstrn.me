[{"content":"Over 2000 years ago, Hippocrates, widely considered the father of medicine, believed that \u0026ldquo;all disease begins in the gut\u0026rdquo;. It would seem he was on to something.\nIn 2020, I kept a log of the food I ate and the effects its had on my digestive system. From this observation, I\u0026rsquo;ve been able to identify several foods that I\u0026rsquo;m sensitive to. I decided to remove gluten from my diet for a month to see the effects it would have.\nWhen I reintroduced gluten back into my diet, I started experiencing indigestion, bloating, belching, and diarrhea. These days, I typically observe a gluten-free vegan diet and avoid spicy food. I also avoid beverages with alcohol or caffeine.\nAccording to Dr Alessio Fasano, gluten is a toxin to human beings and we are unable to digest it. How we react to this toxin differs – some people develop an autoimmune response that attacks its own body, others respond by attacking the gluten fragments, while others have no apparent response. While some people do not react to gluten, it is important to note that it is still a toxin.\nThe problem with gluten is that it causes inflammation and results in something called leaky gut syndrome or intestinal permeability. An important task of the intestine is to form a defensive barrier to prevent absorption of damaging substances during digestion. When the permeability of the intestinal walls are compromised, harmful substances are able to leak into the blood stream.\nChronic inflammation has been linked to many diseases, including heart disease, cancer, diabetes, autism, arthritis, depression, and Alzheimer\u0026rsquo;s.\nBooks Here\u0026rsquo;s a list of books exploring this topic and other health related issues:\n Brain Fog Fix by Mike Dow Wheat Belly by William Davis The Autoimmune Solution by Amy Myers Gluten Freedom by Alessio Fasano  References  Foods that fight inflammation  ","permalink":"https://jsstrn.me/blog/health-problem-with-inflammatory-foods/","summary":"Over 2000 years ago, Hippocrates, widely considered the father of medicine, believed that \u0026ldquo;all disease begins in the gut\u0026rdquo;. It would seem he was on to something.\nIn 2020, I kept a log of the food I ate and the effects its had on my digestive system. From this observation, I\u0026rsquo;ve been able to identify several foods that I\u0026rsquo;m sensitive to. I decided to remove gluten from my diet for a month to see the effects it would have.","title":"The problem with inflammatory foods"},{"content":"When we were children, we might have been taught this in English grammar class:\n He is happy She is happy I am happy You are happy  Why is it that we say, \u0026ldquo;you are happy,\u0026rdquo; rather than, \u0026ldquo;you is happy,\u0026rdquo; even though \u0026lsquo;you\u0026rsquo; is singular? The answer can be found in its etymology.\nIn the past, we used to use the word \u0026lsquo;thou\u0026rsquo; as the second person singular form while \u0026lsquo;you\u0026rsquo; was actually the plural form used to refer to two or more people. In modern English, we no longer have a word to distinguish between the singular and plural forms of you, instead we might say, \u0026ldquo;you all\u0026rdquo; or \u0026ldquo;you two\u0026rdquo; to refer to two or more people.\nPeople began using the word \u0026lsquo;you\u0026rsquo; in its singular form to refer to their superiors as a form of respect. The usage gradually gained popularity they used it amongst their peers and eventually with everyone else.\nReference  Origin and meaning of thou Origin and meaning of you  ","permalink":"https://jsstrn.me/blog/etymology-thou-you/","summary":"When we were children, we might have been taught this in English grammar class:\n He is happy She is happy I am happy You are happy  Why is it that we say, \u0026ldquo;you are happy,\u0026rdquo; rather than, \u0026ldquo;you is happy,\u0026rdquo; even though \u0026lsquo;you\u0026rsquo; is singular? The answer can be found in its etymology.\nIn the past, we used to use the word \u0026lsquo;thou\u0026rsquo; as the second person singular form while \u0026lsquo;you\u0026rsquo; was actually the plural form used to refer to two or more people.","title":"The etymology of 'thou' and 'you'"},{"content":"When the founder of Telegram turned 36, he wrote about his secrets to looking younger than his age.\nPavel Durov listed seven tips – avoid alcohol, sleep more, avoid overeating, exercise regularly, limit stress, avoid eating meat, and live alone.\nOf these seven, I follow all of them except for living alone. I also avoid caffeine.\n","permalink":"https://jsstrn.me/blog/secrets-to-looking-younger-than-your-age/","summary":"When the founder of Telegram turned 36, he wrote about his secrets to looking younger than his age.\nPavel Durov listed seven tips – avoid alcohol, sleep more, avoid overeating, exercise regularly, limit stress, avoid eating meat, and live alone.\nOf these seven, I follow all of them except for living alone. I also avoid caffeine.","title":"Secrets to looking younger than your age"},{"content":"This question is from Interview Cake.\nvar text = \u0026#39;outside\u0026#39; function displayText() { console.log(text) var text = \u0026#39;inside\u0026#39; } displayText() What do you think will be output onto the console?\nIt\u0026rsquo;s not \u0026ldquo;outside\u0026rdquo;.\nIt\u0026rsquo;s not \u0026ldquo;inside\u0026rdquo; either.\nIt\u0026rsquo;s actually \u0026ldquo;undefined\u0026rdquo; because of the hoisted variable.\nThe question is trying to test your understanding on variable hoisting when using the var keyword, but we should not even be using var in modern JavaScript in the first place.\nI would argue that this is not a good type of interview question. Being able to answer this question just tests how good of a compiler you are. Humans are not machines. It\u0026rsquo;s far more important to determine what is bad code and to know how to retify it.\nThe real issue with this code is that it is poorly written. All too often I see companies with interviews like these and then they wonder why their programmers write code so poorly.\nA better question might be to present the above code and ask the candidate if they see a problem with the code and then to refactor it so that there\u0026rsquo;s no ambiguity. This would test the candidate\u0026rsquo;s ability to identify bad code and to also refactor them.\nThe candidate might notice that the question uses var instead of const or let which may lead to unexpected behavior. Replacing var with const or let in this example, would yield an error – Uncaught ReferenceError: can't access lexical declaration 'text' before initialization.\nThe candidate can then write a test to assert the correct output and refactor the code to produce the desired outcome.\n","permalink":"https://jsstrn.me/blog/js-lame-interview-question/","summary":"This question is from Interview Cake.\nvar text = \u0026#39;outside\u0026#39; function displayText() { console.log(text) var text = \u0026#39;inside\u0026#39; } displayText() What do you think will be output onto the console?\nIt\u0026rsquo;s not \u0026ldquo;outside\u0026rdquo;.\nIt\u0026rsquo;s not \u0026ldquo;inside\u0026rdquo; either.\nIt\u0026rsquo;s actually \u0026ldquo;undefined\u0026rdquo; because of the hoisted variable.\nThe question is trying to test your understanding on variable hoisting when using the var keyword, but we should not even be using var in modern JavaScript in the first place.","title":"Beware the lame JavaScript interview question"},{"content":"First, create a favicon at favicon.io for your site. This will create the following files:\n android-chrome-192x192.png android-chrome-512x512.png apple-touch-icon.png favicon-16x16.png favicon-32x32.png favicon.ico  Drop these files into the static folder of your Hugo site. Build the project with the hugo command and publish.\n","permalink":"https://jsstrn.me/notes/hugo-add-favicon/","summary":"How to add a favicon to a Hugo site","title":"Add a favicon to a Hugo site"},{"content":"To create an alias for git checkout.\ngit config --global alias.co checkout Instead of git checkout, you can now run\ngit co Some common aliases to consider adding\ngit config --global alias.co checkout git config --global alias.st \u0026#34;status --short\u0026#34; git config --global alias.lg \u0026#34;log --oneline --graph\u0026#34; git config --global alias.uncommit \u0026#34;reset --soft HEAD~1\u0026#34; To see the list of aliases in your Git configuration\ngit config --list | grep alias If you want to add this as an alias you will need to add ! to qualify it as a full Bash command\ngit config --global alias.alias \u0026#34;!git config --list | grep alias\u0026#34; If you use dotfiles, you can add all your aliases directly to your .gitconfig file.\n[alias] br = branch cm = commit -m co = checkout st = status ","permalink":"https://jsstrn.me/notes/git-alias/","summary":"Here\u0026rsquo;s how to add aliases to common Git commands","title":"Add aliases to Git commands"},{"content":"Create a custom.css file to override the existing CSS rules in your current theme. You can name your CSS file whatever you like and have as many custom CSS files as you like.\nUpdate your config.toml file as follows:\n[params] customCss = [\u0026#34;css/custom.css\u0026#34;] ","permalink":"https://jsstrn.me/notes/hugo-custom-css/","summary":"Add a custom CSS file to override your current theme in Hugo","title":"Add custom CSS to your Hugo site"},{"content":"Individuals and interactions over processes and tools People over processes – while there is value in following protocols and processes, when they get in our way of our work we have to come together as a team and reevaluate what works best for us.\nWorking software over comprehensive documentation Software over specifications – remember that we cannot ship documentation to our customers. Write comprehensive unit and acceptance tests to ensure our software does what it says on the tin.\nCustomer collaboration over contract negotiation Collaboration over constraints – there\u0026rsquo;s no better way to get feedback then collaborating with all stakeholders (e.g. designers, business analysts, quality analysts, product owners, and customers).\nResponding to change over following a plan Responsiveness over rigidity – remember that the objective is not to stick to the plan, but to create value for our customers.\nReference  Manifesto for Agile Software Development  Principles behind the Agile Manifesto  ","permalink":"https://jsstrn.me/notes/agile-manifesto/","summary":"Individuals and interactions over processes and tools People over processes – while there is value in following protocols and processes, when they get in our way of our work we have to come together as a team and reevaluate what works best for us.\nWorking software over comprehensive documentation Software over specifications – remember that we cannot ship documentation to our customers. Write comprehensive unit and acceptance tests to ensure our software does what it says on the tin.","title":"Agile manifesto explained"},{"content":"First, install Avahi on your Raspberry Pi\nsudo apt-get install avahi-daemon Now you can access your Raspberry Pi via its hostname raspberrypi.local instead of its IP address. You can also change the hostname (see reference).\nssh pi@raspberrypi.local Reference  How (and Why) to Assign the .local Domain to Your Raspberry Pi How to Change Your Raspberry Pi (or Other Linux Device’s) Hostname  ","permalink":"https://jsstrn.me/notes/raspi-local-domain/","summary":"How to assign a \u003c!-- raw HTML omitted --\u003e.local\u003c!-- raw HTML omitted --\u003e domain to your Raspberry Pi","title":"Assign a .local domain to a Raspberry Pi"},{"content":"Test assertions should be explicit.\nIf I\u0026rsquo;m trying to assert that something should be true I avoid using the toBeTruthy() matcher.\nIt\u0026rsquo;s important to realize that in JavaScript, all values are truthy unless they are defined as falsy. This means that as long as result is not a falsy value (e.g. false, \u0026quot;\u0026quot;, null, undefined, NaN, etc.), the assertion will pass.\nexpect(result).toBeTruthy() // passes if result is {} or [] or 1 Contrast it with this approach where result will only pass if its value is true.\nexpect(result).toBe(true) // passes only if result is true Similarly, if I am asserting that something should be false then I avoid using toBeFalsy.\nexpect(result).toBeFalsy() // passes if result is \u0026#34;\u0026#34; or null or 0 In this case, the test case can only pass if its value is false.\nexpect(result).toBe(false) // passes only if result is false ","permalink":"https://jsstrn.me/notes/jest-avoid-tobetruthy-tobefalsy/","summary":"Test assertions should be explicit.\nIf I\u0026rsquo;m trying to assert that something should be true I avoid using the toBeTruthy() matcher.\nIt\u0026rsquo;s important to realize that in JavaScript, all values are truthy unless they are defined as falsy. This means that as long as result is not a falsy value (e.g. false, \u0026quot;\u0026quot;, null, undefined, NaN, etc.), the assertion will pass.\nexpect(result).toBeTruthy() // passes if result is {} or [] or 1 Contrast it with this approach where result will only pass if its value is true.","title":"Avoid using toBeTruthy() and toBeFalsy() matchers"},{"content":"I created a Telegram channel to share videos from the BBC Earth YouTube channel. Since this project did not warrant a server to be up 24/7, I leveraged on a serverless architecture to keep the cost low. I used AWS Lambda for the lambda functions and AWS CloudWatch to trigger the lambda through scheduled events.\nFirst I built a Telegram bot which fetches a random video from the BBC Earth YouTube channel and publishes it to a Telegram channel. I then have it run on a daily schedule.\nThe BBC Earth Daily channel can be viewed from a web browser or you can subscribe to the channel on Telegram. The code is open sourced so you can fork it and build your own.\n","permalink":"https://jsstrn.me/projects/bbc-earth-daily/","summary":"How I built the BBC Earth Daily chatbot","title":"BBC Earth Daily"},{"content":"There are many different models of Raspberry Pi depending on your needs.\n  The Raspberry Pi 4, 400, and Zero are all computers with varying degrees of technical specifications, while the Pico is a microcontroller, similar to the Arduino.\nIf you\u0026rsquo;re buying an all-purpose desktop computer then buy it with a CanaKit Raspberry Pi starter kit. It comes with all the essential accessories you will need to get started including a case with a fan, some heat sinks, and a power supply. Try searching on Amazon for the best deals for Raspberry Pi starter kits.\nAlso checkout Cytron, Element 14, Argon40, and RS Components for Raspberry Pi models and accessories like displays, cases, cameras, and HATs (Hardware Attached on Top).\n","permalink":"https://jsstrn.me/notes/raspi-purchase/","summary":"Tips on how to buy your first Raspberry Pi","title":"Buying a Raspberry Pi"},{"content":"Logical OR operator (||) Let\u0026rsquo;s say we want value to be set to 100 if number is null or undefined.\nconst number = null const value = number || 100 // value =\u0026gt; 100 While it seems this would work, we have a nasty bug in our code when number is initialized to 0.\nconst number = 0 const value = number || 100 // value =\u0026gt; 100 The problem with using JavaScript\u0026rsquo;s logical OR (||) operator is that null, undefined, \u0026quot;\u0026quot;, and 0 all evaluate to false – they are falsy.\nNullish coalescing operator (??) A better appraoch is to use the double question marks.\nThe nullish coalescing operator is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined.\nconst number = 0 const value = number ?? 100 // value =\u0026gt; 0 Other approaches We can use strict equality to check if a variable is null or undefined in JavaScript.\nif (number === null || number === undefined) { // value is either null or undefined } What I also found interesting is that although the regular equality in JavaScript is generally frowned upon, these two conditions are exactly identical.\nOf course, in general I would still prefer to use the code above as it is explicit in its intent.\nif (value == null) { // value is either null or undefined } Also, have a look at this equality table.\n","permalink":"https://jsstrn.me/notes/js-check-null-undefined/","summary":"Use double question mark operator to check if a variable is null or undefined in JavaScript","title":"Check if a variable is null or undefined in JavaScript"},{"content":"Ingredients Main dish  vegetables (kang kong, spinach, etc.) textured vegetable protein (TVP) garlic  Sauce  vegetarian mushroom oyster sauce miso paste sesame seed oil soy sauce  Preparation Prepare vegetables  chop garlic chop to about 3 inches in length separate the stems from the leaves  Prepare TVP  put 2 tbsp of TVP into a bowl add 2 tbsp of hot water let stand for 5-6 min  Prepare sauce  mix 1 tsp of miso paste and hot water add 1 tbsp of vegetarian mushroom oyster sauce add 1 tbsp sesame seed oil (optional) add a dash of soy sauce  Cooking  set stove to high heat add vegetable cooking oil to wok add chopped garlic add TVP and cook for 1-2 min add stems of vegetables and cook for 1-2 min add sauce add leaves and cook for 1-2 min  ","permalink":"https://jsstrn.me/recipes/chinese-stir-fried-vegetables/","summary":"My recipe for delicious Chinese style stir fried vegetables.","title":"Chinese style stir fried vegetables"},{"content":"I like creating my own favicon with John Sorrentino\u0026rsquo;s Favicon.io. The tool allows you to convert existing images into .ico file format or create a simple favicon from text or emoji.\nAnother useful resource is Icon Archive. They offer beautifully designed icons that can be downloaded in various formats including, .ico.\n","permalink":"https://jsstrn.me/notes/generate-favicon/","summary":"Find or create a suitable favicon for your site","title":"Create a favicon for your site"},{"content":"Let\u0026rsquo;s say we want to create a list of numbers from [0..9].\nA simple approach would be to use a for loop\nconst numbers = [] for (let i = 0; i \u0026lt; 10; i++) { numbers.push(i) } // numbers =\u0026gt; [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] Another approach is to use the Array.prototype.keys() method which returns the index of each element\nconst numbers = [...Array(10).keys()] // numbers =\u0026gt; [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] Perhaps the most elegant solution is to use Array.from()\nconst numbers = Array.from({ length: 10 }, (_, i) =\u0026gt; i) // numbers =\u0026gt; [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 ] Array.from() takes an array-like object as its first argument and a map function that will be applied to each element. In this case, we pass an object with a length property and then we take just return the index from the map function.\nIf we wanted to start our list at 1 instead, then we can do this\nArray.from({ length: 10 }, (_, i) =\u0026gt; i + 1) // numbers =\u0026gt; [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ] Or, more generally, if we wanted include 10 numbers starting from a certain number\nconst startingNumber = 3 Array.from({length: 10}, (_, i) =\u0026gt; i + startingNumber) // numbers =\u0026gt; [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 ] References  Question in Stack Overflow Array.from() – 2ality Array.from() – MDN Array.prototype.keys() – MDN  ","permalink":"https://jsstrn.me/notes/js-array-range/","summary":"How to create an array of elements based on a range of numbers in JavaScript","title":"Create an array from range of numbers"},{"content":"I created a Telegram channel to deliver dad jokes every day. I did not want to build a Node.js server and host it on Digital Ocean or Linode because that would be cost inefficient. Instead, I wanted to build an event-driven serverless architecture. We can achieve this with AWS Lambda for the lambda functions and AWS CloudWatch to trigger the lambda through scheduled events.\nFirst I created a bot and added it to a channel. The bot fetches a dad joke from icanhazdadjoke.com and publishes it to the channel. The last step was to trigger the lambda function on a regular schedule.\nYou can visit the Daily Dad Jokes public channel or subscribe to the channel on Telegram.\n","permalink":"https://jsstrn.me/projects/daily-dad-jokes/","summary":"How I built an event-driven serverless Telegram bot to deliver dad jokes to you daily","title":"Daily Dad Jokes"},{"content":"Dig is a DNS lookup utility. It\u0026rsquo;s useful when checking if you have setup the DNS configurations correctly for the domain names that you own.\ndig \u0026lt;url\u0026gt; For example, you can check that this URL actually points to GitHub.\ndig notes.jsstrn.me ","permalink":"https://jsstrn.me/notes/dig-dns-lookup-domain/","summary":"How to check your domain\u0026rsquo;s DNS configurations","title":"Dig – DNS lookup utility"},{"content":"If we want a Bash script to stop executing the rest of the script when one of the commands fail, we can simply add set -e to the top of our script.\nset -e ","permalink":"https://jsstrn.me/notes/bash-exit-on-error/","summary":"How to exit a Bash script when any command fails","title":"Exit a Bash script on error"},{"content":"Extreme Programming (XP) adopts an iterative development process with iteration and release planning meetings centered around user stories.\nXP emphasizes writing software with test driven development, pair programming, and continuous integration.\nReference  Introducing Extreme Programming  ","permalink":"https://jsstrn.me/notes/agile-extreme-programming/","summary":"Extreme Programming (XP) adopts an iterative development process with iteration and release planning meetings centered around user stories.\nXP emphasizes writing software with test driven development, pair programming, and continuous integration.\nReference  Introducing Extreme Programming  ","title":"Extreme Programming"},{"content":"Pi-hole is a domain name server that serves as a network-wide ad blocker.\nThe main idea is to run Pi-hole on a Raspberry Pi and point our router to use it as its DNS. All traffic is then directed through Pi-hole where we can manage block lists.\n","permalink":"https://jsstrn.me/notes/raspi-pi-hole/","summary":"Using Pi-hole to block ads","title":"Getting started with Pi-hole"},{"content":"Command Line Interface Guidelines for building better command-line programs.\n","permalink":"https://jsstrn.me/notes/cli-guidelines/","summary":"Best practices for building CLI tools","title":"Guidelines for building CLI tools"},{"content":"History of Singapore is a podcast series narrated by Oxford historian, Dr Thum Ping Tjin, better known as PJ Thum.\n","permalink":"https://jsstrn.me/notes/history-of-singapore/","summary":"Historian PJ Thum narrates the history of Singapore in this podcast series","title":"History of Singapore"},{"content":"Using an IP address can be quite cumbersome, so let\u0026rsquo;s assign a .local domain to your NAS.\nHead over to Control Panel and select Network. Under the General tab, set your server name. Click Apply and you can now access your NAS with http://\u0026lt;server-name\u0026gt;.local:5000 from a web browser that\u0026rsquo;s within the same local network.\n","permalink":"https://jsstrn.me/notes/synology-local-domain/","summary":"Using an IP address can be quite cumbersome, so let\u0026rsquo;s assign a .local domain to your NAS.\nHead over to Control Panel and select Network. Under the General tab, set your server name. Click Apply and you can now access your NAS with http://\u0026lt;server-name\u0026gt;.local:5000 from a web browser that\u0026rsquo;s within the same local network.","title":"How to assign a .local domain to your Synology NAS server"},{"content":"Adding commas to stored telephone numbers in your contacts act as pauses which allow you to navigate complicated phone menus.\nFor instance, if a phone number requires that you select 1 for English then you can simply save their number as follows +65 9876 5432,1 to your contacts. Now when you dial that number it will pause and then dial 1 for you. If you require a prolonged pause then simply add more commas, like so +65 9876 5432,,,1\n","permalink":"https://jsstrn.me/notes/phone-menu-navigation/","summary":"Automatically navigate through complicated phone menus with commas","title":"How to automate phone menu navigation"},{"content":"It may be useful for troubleshooting to know the architecture and CPU of your Synology NAS server.\nFor instance, the Synology DS218j model is an x18 Series and has a Dual Core Marvell Armada 385 88F6820 with 512MB of DDR3 RAM.\n","permalink":"https://jsstrn.me/notes/synology-cpu-architecture/","summary":"It may be useful for troubleshooting to know the architecture and CPU of your Synology NAS server.\nFor instance, the Synology DS218j model is an x18 Series and has a Dual Core Marvell Armada 385 88F6820 with 512MB of DDR3 RAM.","title":"How to check the CPU and architecture of your Synology NAS server"},{"content":"To check the status of the Git repository.\ngit status We can see a --short or -s version with this command.\ngit status --short For convenience, you can add git st as an alias.\ngit config --global alias.st \u0026#34;status --short\u0026#34; ","permalink":"https://jsstrn.me/notes/git-status/","summary":"Check the status of a Git repository","title":"How to check the status of a Git repository"},{"content":"Git commands are different for different versions so be sure to check your Git version.\ngit --version Clone a repository with submodules using the --recurse-submodules flag. This works for Git version 2.13 or higher.\ngit clone --recurse-submodules \u0026lt;remote-repo-url\u0026gt; If the repository has a lot of submodules, then adding the -j8 flag will fetch up to 8 submodules in parallel.\ngit clone --recurse-submodules -j8 \u0026lt;remote-repo-url\u0026gt; Alternatively, first clone the repository and then add the submodules. This should work regardless of your Git version.\ngit clone \u0026lt;remote-repo-url\u0026gt; git submodule init git submodule update Reference: How to clone including submodules\n","permalink":"https://jsstrn.me/notes/git-submodule/","summary":"Clone a repository with submodules","title":"How to clone a repository with submodules"},{"content":"First, check that your NAS server and your computer are on the same network.\nYou can connect to your NAS server by pointing your browser to http://\u0026lt;your-ip-address\u0026gt;:5000 and then provide the login credentials.\nCheck your home router to determine what IP address has been assigned to your NAS server. Optionally, you can fix an IP address so its easier for you to connect to your NAS in future.\nIf you have set up a .local domain then point your browser to http://\u0026lt;server-name\u0026gt;.local.\n","permalink":"https://jsstrn.me/notes/synology-connect-via-browser/","summary":"First, check that your NAS server and your computer are on the same network.\nYou can connect to your NAS server by pointing your browser to http://\u0026lt;your-ip-address\u0026gt;:5000 and then provide the login credentials.\nCheck your home router to determine what IP address has been assigned to your NAS server. Optionally, you can fix an IP address so its easier for you to connect to your NAS in future.\nIf you have set up a .","title":"How to connect to your Synology NAS server from a web browser"},{"content":"First, open Control Panel and navigate to Terminal \u0026amp; SNMP. Next, enable SSH service. Click Apply. Now you can SSH into your NAS with your credentials.\nOpen a terminal and connect to your NAS server via SSH\nssh \u0026lt;user\u0026gt;@\u0026lt;ip-address\u0026gt; If you have set up a .local domain, then\nssh \u0026lt;user\u0026gt;@\u0026lt;server-name\u0026gt;.local You will be prompted for your password.\n","permalink":"https://jsstrn.me/notes/synology-connect-via-ssh/","summary":"First, open Control Panel and navigate to Terminal \u0026amp; SNMP. Next, enable SSH service. Click Apply. Now you can SSH into your NAS with your credentials.\nOpen a terminal and connect to your NAS server via SSH\nssh \u0026lt;user\u0026gt;@\u0026lt;ip-address\u0026gt; If you have set up a .local domain, then\nssh \u0026lt;user\u0026gt;@\u0026lt;server-name\u0026gt;.local You will be prompted for your password.","title":"How to connect to your Synology NAS server with SSH"},{"content":"Download the youtube-dl command line tool from brew\nbrew install youtube-dl youtube-dl supports a huge list of extractors, including popular sites like YouTube and Vimeo.\nList all extractors and pipe it into grep to search for an extractor\nyoutube-dl --list-extractors | grep \u0026#34;udemy\u0026#34; To download a video\nyoutube-dl \u0026#34;video-url\u0026#34; Simply pass in the cookie file to download videos that require login credentials\nyoutube-dl --cookies \u0026lt;path-to-cookie-file\u0026gt; \u0026#34;video-url\u0026#34; You can use a browser extension like cookie.txt to extract your cookie file.\n","permalink":"https://jsstrn.me/notes/download-online-videos/","summary":"Download the youtube-dl command line tool from brew\nbrew install youtube-dl youtube-dl supports a huge list of extractors, including popular sites like YouTube and Vimeo.\nList all extractors and pipe it into grep to search for an extractor\nyoutube-dl --list-extractors | grep \u0026#34;udemy\u0026#34; To download a video\nyoutube-dl \u0026#34;video-url\u0026#34; Simply pass in the cookie file to download videos that require login credentials\nyoutube-dl --cookies \u0026lt;path-to-cookie-file\u0026gt; \u0026#34;video-url\u0026#34; You can use a browser extension like cookie.","title":"How to download online videos"},{"content":"macOS comes with its own version of Ruby which will not allow you to install Gems. To start developing in Ruby, we first have to install our own version of Ruby.\nIt is generally recommended to use a version manager for Ruby, like rbenv to manage different versions of Ruby in various projects.\nbrew install rbenv Add this line to your .zshrc. This will setup rbenv including adding rbenv to your $PATH\neval \u0026#34;$(rbenv init -)\u0026#34; See list of stable Ruby versions to install\nrbenv install -l Install the version of Ruby that you want\nrbenv install \u0026lt;version\u0026gt; State which version of Ruby you want to use as the global version\nrbenv global \u0026lt;version\u0026gt; ","permalink":"https://jsstrn.me/notes/ruby-install/","summary":"How to install Ruby on macOS with Homebrew and rbenv","title":"How to install Ruby on macOS"},{"content":"Let\u0026rsquo;s assume you have made three commits to your master branch.\nA - B - C (master) Move commits in C to staged with git reset --soft B where B is the commit hash.\nA - B - C (master) git reset --soft B A - B (master) C is in staged Move commits in C to unstaged with git reset B where B is the commit hash.\nA - B - C (master) git reset B A - B (master) C is in unstaged ⚠️ Exercise caution when doing this! Remove commits in C along with any other unstaged changes with git reset --hard B where B is the commit hash.\nA - B - C (master) git reset --hard B A - B (master) C has been discarded ","permalink":"https://jsstrn.me/notes/git-reset/","summary":"Reverting your changes in Git","title":"How to reset changes in Git"},{"content":"Go to Package Center and install Web Station. Now you should be able to see a default webpage when you visit http://\u0026lt;your-ip-address\u0026gt; or http://\u0026lt;server-name\u0026gt;.local (the default port is 80).\nTo edit the webpage, go to the web directory in your File Station.\nNote that the website is only accessible within your local network. If you want to be access it via the internet you\u0026rsquo;ll need to setup DDNS.\n","permalink":"https://jsstrn.me/notes/synology-setup-web-server/","summary":"Go to Package Center and install Web Station. Now you should be able to see a default webpage when you visit http://\u0026lt;your-ip-address\u0026gt; or http://\u0026lt;server-name\u0026gt;.local (the default port is 80).\nTo edit the webpage, go to the web directory in your File Station.\nNote that the website is only accessible within your local network. If you want to be access it via the internet you\u0026rsquo;ll need to setup DDNS.","title":"How to setup a local web server with a Synology NAS server"},{"content":"When writing test cases, we can organize our tests into three segments\n Arrange – set variables, stubs, mocks, spies, etc Act – the action that you wish to assert on Assert – make an assertion on the expected and actual results  Here\u0026rsquo;s a simple example:\ntest(\u0026#34;renders correct number of books\u0026#34;, () =\u0026gt; { // arrange  const books = [ {title: \u0026#34;Animal Farm\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Nineteen Eighty-Four\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Down and Out in Paris and London\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, ] // act  const { queryAllByTestId } = render(\u0026lt;BookList books={books} /\u0026gt;); // assert  expect(queryAllByTestId(\u0026#39;book-item\u0026#39;).length).toBe(3); }) ","permalink":"https://jsstrn.me/notes/testing-arrange-act-assert/","summary":"When writing test cases, we can organize our tests into three segments\n Arrange – set variables, stubs, mocks, spies, etc Act – the action that you wish to assert on Assert – make an assertion on the expected and actual results  Here\u0026rsquo;s a simple example:\ntest(\u0026#34;renders correct number of books\u0026#34;, () =\u0026gt; { // arrange  const books = [ {title: \u0026#34;Animal Farm\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Nineteen Eighty-Four\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, {title: \u0026#34;Down and Out in Paris and London\u0026#34;, author: \u0026#34;George Orwell\u0026#34;}, ] // act  const { queryAllByTestId } = render(\u0026lt;BookList books={books} /\u0026gt;); // assert  expect(queryAllByTestId(\u0026#39;book-item\u0026#39;).","title":"How to structure your unit tests"},{"content":"Let\u0026rsquo;s say we have an online bookstore where we list all our available books. We want to be able to implement a search bar that can filter out results that match the title, author, publisher, etc.\nSolutions like Algolia, Solr, or Elasticsearch are non-trivial solutions that require quite a bit of configuration and resources. These solutions may also be overkill if you have a small to moderately large dataset.\nWe can look at Fuse.js and Lunr for a more lightweight solution. Fuse.js is what powers the search engine for this site.\n","permalink":"https://jsstrn.me/notes/js-search-functionality/","summary":"Let\u0026rsquo;s say we have an online bookstore where we list all our available books. We want to be able to implement a search bar that can filter out results that match the title, author, publisher, etc.\nSolutions like Algolia, Solr, or Elasticsearch are non-trivial solutions that require quite a bit of configuration and resources. These solutions may also be overkill if you have a small to moderately large dataset.\nWe can look at Fuse.","title":"Implementing a frontend search functionality"},{"content":"Update your packages It\u0026rsquo;s a good idea to periodically check that all your packages are updated. Head over to Package Manager, select Installed and update any packages as required.\nYou can also set up automatic updates from the settings within Package Manager and verify that Update packages automatically has been checked.\nUpdate DiskStation Manager (DSM) Open the Control Panel and navigate or search for Update \u0026amp; Restore. Next, update your DSM as required.\nDownload and manually install DiskStation Manager (DSM) Go to Download Center, select NAS as the product type and select the model of your Synology NAS server. Manually install DSM via Control Panel.\n","permalink":"https://jsstrn.me/notes/synology-update-packages/","summary":"Update your packages It\u0026rsquo;s a good idea to periodically check that all your packages are updated. Head over to Package Manager, select Installed and update any packages as required.\nYou can also set up automatic updates from the settings within Package Manager and verify that Update packages automatically has been checked.\nUpdate DiskStation Manager (DSM) Open the Control Panel and navigate or search for Update \u0026amp; Restore. Next, update your DSM as required.","title":"Keep your Synology NAS server updated"},{"content":"Law of triviality occurs when members of a team give disproportionate weight to trivial issues when bigger issues are up for discussion.\nTo illustrate this law, Parkinson came up with a fictional story of a committee who had to approve plans for a nuclear power plant. The committee, however, preferred to discuss about a bike shed instead because the problem was easier to grasp. The term bike-shedding refers to this story.\nNot to be confused with Parkinson\u0026rsquo;s Law\n","permalink":"https://jsstrn.me/notes/adage-law-of-triviality/","summary":"When people give disproportionate weight to trivial matters","title":"Law of triviality"},{"content":"We can limit the number of open editors in VS Code by configuring the following in settings:\n workbench.editor.limit.enabled: true – enable editor limit; default is false workbench.editor.limit.value: 1 – set number of open editors; default is 10 workbench.editor.limit.perEditorGroup: true – allow side-by-side panels; default is false  ","permalink":"https://jsstrn.me/notes/vscode-set-editor-limit/","summary":"Set a limit to the number of open editors in VS Code","title":"Limit number of open editors in VS Code"},{"content":"TLDR; ⚠️ Note that this merge method will NOT work for an array of objects\nconst a = [1, 2, 3] const b = [3, 4, 5] const c = [...(new Set([...a, ...b]))] // =\u0026gt; [1, 2, 3, 4, 5] Breakdown of steps\n// merge with duplicates const m = [...a, ...b] // =\u0026gt; [1, 2, 3, 3, 4, 5]  // remove duplicates with set const s = new Set(m) // =\u0026gt; Set [1, 2, 3, 4, 5]  // convert set to array const c = [...s] // =\u0026gt; [1, 2, 3, 4, 5] Explanation Let\u0026rsquo;s say we have these two arrays that we would like to merge together.\nconst a = [1, 2, 3] const b = [3, 4, 5] One approach is to use .concat\nconst c = a.concat(b) // =\u0026gt; [1, 2, 3, 3, 4, 5] Another approach is to use destructuring\nconst c = [...a, ...b] // =\u0026gt; [1, 2, 3, 3, 4, 5] In both cases, the problem is that there are duplicates in the merge. To ensure that there are no duplicates, we can use a Set.\nconst c = new Set([...a, ...b]) // =\u0026gt; [1, 2, 3, 4, 5] However, now c is a Set instead of an Array.\nArray.isArray(c) // =\u0026gt; false To solve this, we can convert a Set into an Array with Array.from\nconst c = Array.from(new Set([...a, ...b])) // =\u0026gt; [1, 2, 3, 4, 5] Another way is to simply use the spread operator\nconst c = [...(new Set([...a, ...b]))] // =\u0026gt; [1, 2, 3, 4, 5] ","permalink":"https://jsstrn.me/notes/js-merge-arrays/","summary":"How to merge two or more arrays in JavaScript","title":"Merging arrays in JavaScript without duplicates"},{"content":"The NATO phonetic alphabet\n A – Alpha B – Bravo C – Charlie D – Delta E – Echo F – Foxtrot G – Golf H – Hotel I – India J – Juliet K – Kilo L – Lima M – Mike N – November O – Oscar P – Papa Q – Quebec R – Romeo S – Sierra T – Tango U – Uniform V – Victor W – Whiskey X – X-Ray Y – Yankee Z – Zulu  Reference\n NATO phonetic alphabet  ","permalink":"https://jsstrn.me/notes/nato-phonetic-alphabet/","summary":"A reference to the NATO phonetic alphabet","title":"NATO phonetic alphabet"},{"content":"Parkinson’s Law states that \u0026ldquo;work expands so as to fill the time available for its completion.\u0026rdquo;\nNot to be confused with Parkinson\u0026rsquo;s Law of Triviality.\n","permalink":"https://jsstrn.me/notes/adage-parkinson-law/","summary":"Work expands to fill the time available for its completion","title":"Parkinson’s Law"},{"content":"The Peter Principle states that people, in a company, are promoted to their “maximum level of incompetence.” This is because an employee is promoted based on the success of their previous job until they reach a level at which they are no longer competent.\n","permalink":"https://jsstrn.me/notes/adage-peter-principle/","summary":"People are promoted to their maximum level of incompetence","title":"Peter Principle"},{"content":"React Query  has a very elegant API for fetching and caching data in React applications without getting tangled in global state.\nReference  Data fetching in Redux is painful, get rid of it now.  ","permalink":"https://jsstrn.me/notes/react-query/","summary":"Fetch, cache and update data in React applications","title":"React Query"},{"content":"RealWorld is a collection of repositories that have implemented a clone of Medium.com called Conduit in various libraries, frameworks, and programming languages.\nThe idea is to go beyond yet another todo list app and give you something that\u0026rsquo;s more realistic. You can also see a live demo of the application. There are separate frontend, backend, and fullstack solutions where you can explore how different implementations have structured their code. Some implementations may also have tests, though this is not required in the specifications.\nIf you\u0026rsquo;re just getting started with a new frontend framework, then you might want to check out the collection of repositories of TodoMVC instead.\n","permalink":"https://jsstrn.me/notes/real-world-app/","summary":"The mother of all demo apps","title":"RealWorld example applications"},{"content":"To reboot your Raspberry Pi, simply run the command\nsudo shutdown -r now Or even simpler\nsudo reboot ","permalink":"https://jsstrn.me/notes/raspi-restart/","summary":"How to restart your Raspberry Pi from the Terminal","title":"Reboot your Raspberry Pi"},{"content":"The purpose of the prime directive is to ensure that everyone in the team understands that this process is not about finding fault with others or to blame others for issues brought up during the retrospective.\n Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand.  \u0026ndash; The Retrospective Prime Directive\n","permalink":"https://jsstrn.me/notes/retrospective-prime-directive/","summary":"The purpose of the prime directive is to ensure that everyone in the team understands that this process is not about finding fault with others or to blame others for issues brought up during the retrospective.\n Regardless of what we discover, we understand and truly believe that everyone did the best job they could, given what they knew at the time, their skills and abilities, the resources available, and the situation at hand.","title":"Retrospective Prime Directive"},{"content":"Very often I come across a situation where I\u0026rsquo;d like to only run a certain subset of tests in a describe block, usually when I\u0026rsquo;m trying to debug some code.\nLet\u0026rsquo;s say the describe block you want to run contains the word \u0026ldquo;Fizz Buzz\u0026rdquo;\ndescribe(\u0026#39;Fizz Buzz\u0026#39;, () =\u0026gt; { // your tests here }) You can run all describe blocks that match a regex pattern\njest --testNamePattern \u0026#39;Fizz Buzz\u0026#39; Or simply use the alias -t instead\njest -t \u0026#39;Fizz Buzz\u0026#39; Reference: Jest CLI documentation\n","permalink":"https://jsstrn.me/notes/jest-match-name-tests/","summary":"How to run tests that only match the name in the describe block","title":"Run Jest tests that match a describe block"},{"content":"It is often recommended to install updates before installing other packages, we can create a Cron job that will run these commands on a daily basis.\nList existing Cron jobs\ncrontab -l Create a new Cron job\ncrontab -e Now add this line to the crontab which will run daily at midnight\n0 0 * * * sudo apt update \u0026amp;\u0026amp; sudo apt --yes upgrade Reference  Scheduling tasks with Cron  ","permalink":"https://jsstrn.me/notes/raspi-schedule/","summary":"How to schedule a Cron job on your Raspberry Pi","title":"Schedule a Cron job on Raspberry Pi"},{"content":"Here we want to create functions that allow us to count up and down a variable with a lower bound of 0.\nWe can achieve this easily with Math.max() which returns the higher of two values. So now if count falls below 0 it will default to 0 because Math.max(-1, 0) is 0.\ncountDown = (count, min = 0) =\u0026gt; Math.max(count - 1, min) countDown(1) // =\u0026gt; 0 countDown(-1) // =\u0026gt; 0 Similarly, if you had to set the upper bound limit of a variable, you would use Math.min() because this would choose the smaller of the two numbers – Math.min(101, 100) is 100.\ncountUp = (count, max = 100) =\u0026gt; Math.min(count + 1, max) countUp(99) // =\u0026gt; 100 countUp(101) // =\u0026gt; 100 Reference  Math.min() – MDN Math.max() – MDN  ","permalink":"https://jsstrn.me/notes/js-math-min-max/","summary":"Use Math.min() and Math.max() to set the upper and lower bound limits of a variable","title":"Set the lower and upper bound limits of a variable in JavaScript"},{"content":"NAS server If you have a NAS server, you can install Plex or Emby as your media server. Both Plex and Emby have clients for Apple TV and other devices.\nRaspberry Pi If you have a Raspberry Pi, its relatively simple to turn it into a media server with OSMC and connect it directly to a TV. The downside is that you\u0026rsquo;ll need to use a keyboard to navigate around.\nDIY The new kid on the block is Jellyfin – an open source fork of Emby.\nTo install Jellyfin on a Raspberry Pi, you can follow instructions for Debian.\nThere\u0026rsquo;s even instructions to install Jellyfin on a Synology NAS server with Docker. Just keep in mind that you\u0026rsquo;ll need to be on DSM 7.\nThey support numerous clients, except for Apple TV. For that you have to access your content with third-party applications like Infuse or MrMC.\n","permalink":"https://jsstrn.me/notes/setting-up-home-media-server/","summary":"NAS server If you have a NAS server, you can install Plex or Emby as your media server. Both Plex and Emby have clients for Apple TV and other devices.\nRaspberry Pi If you have a Raspberry Pi, its relatively simple to turn it into a media server with OSMC and connect it directly to a TV. The downside is that you\u0026rsquo;ll need to use a keyboard to navigate around.","title":"Setting up a home media server"},{"content":"Plex is no longer listed as a third-party package on Package Manager for DSM 7.0 and the one that is listed for DSM 6.2 is outdated, so you have to manually install the media server.\nDownload Plex media server for Synology and manually install the package with Package Manager.\nIf you\u0026rsquo;re on DSM 7.0 and you can\u0026rsquo;t manually install Plex media server, try Emby as an alternative.\nYou can download content with Synology\u0026rsquo;s Download Station and add them to the Plex directory. Use any Plex client to enjoy your content.\n","permalink":"https://jsstrn.me/notes/synology-setup-plex-media-server/","summary":"Plex is no longer listed as a third-party package on Package Manager for DSM 7.0 and the one that is listed for DSM 6.2 is outdated, so you have to manually install the media server.\nDownload Plex media server for Synology and manually install the package with Package Manager.\nIf you\u0026rsquo;re on DSM 7.0 and you can\u0026rsquo;t manually install Plex media server, try Emby as an alternative.\nYou can download content with Synology\u0026rsquo;s Download Station and add them to the Plex directory.","title":"Setup Plex media server on your Synology NAS server"},{"content":"First, we have to assign a static IP address to the Raspberry Pi on your home router. Most home routers will allow you to do this. Read your home router manual to learn how to do this.\nNow you can access the Raspberry Pi remotely via SSH ssh \u0026lt;username\u0026gt;@\u0026lt;ip-address\u0026gt;\nFor example, if you gave 192.168.1.123 to your Pi, then you can connect to your machine like so\nssh pi@192.168.1.123 The default username is pi and the default password is raspberry. For security reasons, you should change your password.\n","permalink":"https://jsstrn.me/notes/raspi-ssh/","summary":"How to SSH into a Raspberry Pi","title":"SSH into a Raspberry Pi"},{"content":"This two character sequence #! is called shebang. It is used in shell scripts to determine which interpreter should be used to run the script.\nI personally like to remember #! as hash (#) and bang (!).\nAccording to Wikipedia:\n The name shebang for the distinctive two characters may have come from an inexact contraction of SHArp bang or haSH bang, referring to the two typical Unix names for them. Another theory on the sh in shebang is that it is from the default shell sh, usually invoked with shebang.\n ","permalink":"https://jsstrn.me/notes/shebang-origin/","summary":"Why #! is called shebang","title":"The origin of the name shebang"},{"content":"Update your Raspberry Pi Update the list of packages\nsudo apt update Then upgrade the packages\nsudo apt upgrade This will ask if you want to upgrade packages.\nIf you want to upgrade without being prompted, you can add the --yes flag to the command\nsudo apt --yes upgrade ","permalink":"https://jsstrn.me/notes/raspi-update/","summary":"How to update your Raspberry Pi","title":"Update your Raspberry Pi"},{"content":"Settings :set number – show line numbers\nModes Esc – command mode (default mode)\ni – insert mode (before cursor)\na – insert mode (after cursor)\nv – visual mode to select text to y (yank) or d (delete) text\nQuiting Vim :q – quit\n:q! – quit without saving\n:wq – save and quit\n:ZZ – save and quit\nUndo and redo u – undo the previous command\nU – undo the whole line\nCtrl + R – redo the previous command\nCopy and paste yw – yank (copy) a word\nyy – yank (copy) the entire line\ny$ – yank from cursor position to end of line\nyG – yank from cursor position to end of file\np – to put or paste the text that was copied or deleted\nDelete x – delete a character\ndw – delete word\ndd – delete line\nd$ – delete from cursor to end of line\ncw – change word; this will delete the word and put you in insert mode\nNavigation h – move left\nl – move right\nj – move down\nk – move down\n0 – move to start of line\n$ – move to end of line\nnG – move to line number where n is the line number (e.g. 54G goes to line 54)\n[[ – move to start of file\n]] – move to end of file\n","permalink":"https://jsstrn.me/notes/vim-commands/","summary":"A list of the most commonly used Vim commands","title":"Useful Vim commands"},{"content":"Avoid blindly staging code with git add --all or git add . as you may accidentally stage and commit code that you didn\u0026rsquo;t intend to.\nI prefer to use --patch or -p when adding code to staging. This allows you to go through your changes and review them by hunks.\ngit add -p Since new files are not tracked they will not show up in --patch so you have to use --intent-to-add or -N to track those files before you can use --patch.\ngit add -N \u0026lt;new-filename\u0026gt; git add -p You will see changes marked with + or - to indicate if code has been added or deleted. You\u0026rsquo;ll be prompted as such.\n(1/1) Stage this hunk [y,n,q,a,d,e,?]? Typically, you reply with y to stage the hunk or n to ignore it. Sometimes we want to stage the entire file without looking at the remaining hunks in the file, we can do this with a. This is useful for files like package-lock.json.\nWe can manually edit e which lines to add or remove in each hunk. When in edit mode you will make your changes in vim. To remove '+' lines just delete them. To remove '-' lines, just change them to ' '.\nUse ? to display this help screen if you ever forget what the commands stand for.\ny - stage this hunk n - do not stage this hunk q - quit; do not stage this hunk or any of the remaining ones a - stage this hunk and all later hunks in the file d - do not stage this hunk or any of the later hunks in the file e - manually edit the current hunk ? - print help Once you have reviewed all your changes. You can commit your changes as usual.\ngit commit -m \u0026#34;Some meaningful commit message\u0026#34; ","permalink":"https://jsstrn.me/notes/git-commit/","summary":"Review code changes before staging and committing","title":"View changes before committing"},{"content":"One way to review code changes that are unstaged is to use the following command.\ngit diff Note that untracked files will not be shown. You have to add untracked files before they will show up.\ngit add -N \u0026lt;untracked-file\u0026gt; You can also see a summary of what has changed with --stat\ngit diff --stat This command is useful to check for trailing white space and merge conflict markers.\ngit diff --check You can use this command if you\u0026rsquo;ve already staged your changes. This is useful before you make a commit.\ngit diff --staged ","permalink":"https://jsstrn.me/notes/git-diff/","summary":"View code changes with \u003c!-- raw HTML omitted --\u003egit diff\u003c!-- raw HTML omitted --\u003e","title":"View code changes"},{"content":"You can actually view any public Telegram channel without requiring a Telegram account.\nTypically, public channels on Telegram follow this pattern t.me/\u0026lt;channel-name\u0026gt;. For example, t.me/jesstern will direct you to my public channel. However, you need to have a Telegram account to view the channel.\nPublic channels on Telegram can also be viewed without a Telegram account if you include a /s/ before the channel name. The pattern is as follows t.me/s/\u0026lt;channel-name\u0026gt;. For example, t.me/s/jesstern can be viewed directly in your web browser.\nNow you can enjoy Daily Dad Jokes and BBC Earth Daily even if you don\u0026rsquo;t have Telegram.\n","permalink":"https://jsstrn.me/notes/telegram-public-channel/","summary":"Make any public Telegram channel viewable outside of Telegram","title":"View public Telegram channels without a Telegram account"},{"content":"To watch for file changes and only run tests related to changed files. This requires that your project is a Git repository.\njest --watch To watch for file changes and run all tests. This does not require that your project be a Git repository.\njest --watchAll We often add this to our npm scripts\n{ \u0026#34;scripts\u0026#34;: { \u0026#34;test\u0026#34;: \u0026#34;jest\u0026#34;, \u0026#34;test:watch\u0026#34;: \u0026#34;jest --watch\u0026#34; } } Reference: Jest CLI documentation\n","permalink":"https://jsstrn.me/notes/jest-run-tests-watch/","summary":"How to run your tests as your files change in Jest","title":"Watch for file changes as you run your tests"},{"content":"There are three main types of switches to choose from:\nTactile Tactile switches are the most suitable ones for most users. They require a bit more force to activate the keys and therefore reduce accidental typos.\nThis is my preferred choice.\nClicky Clicky switches are a type of tactile switch that emit an audible click sound when pressed. This may not be suitable when working in an office space as the typing can get loud and annoying.\nLinear Linear switches have no feedback when pressed and are more suitable for gamers. Accidentally hitting a key will activate it which results in more typos, but is acceptable for gaming as speed is more important than accuracy.\nConclusion If you\u0026rsquo;re new to mechanical keyboard switches and don\u0026rsquo;t know which one to get, then I would suggest getting tactile switches. They are the most versatile and suitable for both regular typing and gaming.\n","permalink":"https://jsstrn.me/notes/mechanical-keyboards/","summary":"Choosing between the different types of mechanical keyboard switches?","title":"Which mechanical keyboard switch should I choose?"},{"content":"This two-characters sequence #! is called a shebang. It is used in shell scripts to determine which interpreter should be used to run the script.\nIt\u0026rsquo;s a good idea to include a shebang #! at the top of a Bash file. This is so that the sript runs correctly regardless of what shell the user is running.\nFor example, if a user is using the zsh shell, the script would default to zsh syntax instead of the intended bash syntax. Adding a shebang prevents this issue.\nThis also means you don\u0026rsquo;t have to include the .sh file extension.\n#!/usr/bin/env bash Reference: What is the preferred bash shebang\n","permalink":"https://jsstrn.me/notes/bash-shebang/","summary":"Add a shebang to the top of your Bash scripts","title":"Which shebang to use to run Bash scripts?"},{"content":"Here\u0026rsquo;s a good illustration why you should always use strict equality – JavaScript\u0026rsquo;s equality table.\n","permalink":"https://jsstrn.me/notes/js-equality-table/","summary":"JavaScript equality table","title":"Why you should always use strict equality"},{"content":"Ingredients  green or black tea (decaf for non-caffeinated version) mint leaves lime lemon lemongrass  Preparation Prepare ingredients  crush some mint leaves squeeze some fresh lime and lemon juice cut some lime and lemon into wedges  Prepare cold brew tea  add two tea bags to a jug of water add crushed mint leaves add squeezed lime and lemon juice add lemongrass leave in the fridge overnight  Serve  pour into a glass add fresh mint leaves add a stick of lemongrass drink with a straw  ","permalink":"https://jsstrn.me/recipes/zesty-cold-brew-tea/","summary":"My recipe for a refreshing zesty cold brew tea","title":"Zesty cold brew tea"}]