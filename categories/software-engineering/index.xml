<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>software engineering on Jesstern</title><link>https://jsstrn.me/categories/software-engineering/</link><description>Recent content in software engineering on Jesstern</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 05 Jan 2021 01:21:42 +0800</lastBuildDate><atom:link href="https://jsstrn.me/categories/software-engineering/index.xml" rel="self" type="application/rss+xml"/><item><title>Beware the lame JavaScript interview question</title><link>https://jsstrn.me/blog/js-lame-interview-question/</link><pubDate>Tue, 05 Jan 2021 01:21:42 +0800</pubDate><guid>https://jsstrn.me/blog/js-lame-interview-question/</guid><description>This question is from Interview Cake.
var text = &amp;#34;outside&amp;#34;; function displayText() { console.log(text); var text = &amp;#34;inside&amp;#34;; } displayText(); What do you think will be output onto the console?
It&amp;rsquo;s not &amp;ldquo;outside&amp;rdquo;.
It&amp;rsquo;s not &amp;ldquo;inside&amp;rdquo; either.
It&amp;rsquo;s actually &amp;ldquo;undefined&amp;rdquo; because of the hoisted variable.
The question is trying to test your understanding on variable hoisting when using the var keyword, but we should not even be using var in modern JavaScript in the first place.</description></item><item><title>Add a favicon to a Hugo site</title><link>https://jsstrn.me/notes/hugo-add-favicon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/hugo-add-favicon/</guid><description>How to add a favicon to a Hugo site</description></item><item><title>Add a humans.txt file to your site</title><link>https://jsstrn.me/notes/humans.txt/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/humans.txt/</guid><description>A humans.txt file contains information about the different people who have contributed to building the website.
Have a look at the humans.txt pages by Medium and Trello. I think Netflix has a very cool humans.txt page.
This website also has a humans.txt page.</description></item><item><title>Add aliases to Git commands</title><link>https://jsstrn.me/notes/git-alias/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-alias/</guid><description>Here&amp;rsquo;s how to add aliases to common Git commands</description></item><item><title>Add custom CSS to your Hugo site</title><link>https://jsstrn.me/notes/hugo-custom-css/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/hugo-custom-css/</guid><description>Add a custom CSS file to override your current theme in Hugo</description></item><item><title>Agile manifesto explained</title><link>https://jsstrn.me/notes/agile-manifesto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/agile-manifesto/</guid><description>Individuals and interactions over processes and tools People over processes – while there is value in following protocols and processes, when they get in our way of our work we have to come together as a team and reevaluate what works best for us.
Working software over comprehensive documentation Software over specifications – remember that we cannot ship documentation to our customers. Write comprehensive unit and acceptance tests to ensure our software does what it says on the tin.</description></item><item><title>Amazon's leadership principles</title><link>https://jsstrn.me/notes/amazon-leadership-principles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/amazon-leadership-principles/</guid><description>These are the 16 leadership principles from Amazon.
Customer obsession Ownership Invent and simplify Are right, a lot Learn and be curious Hire and develop the best Insist on the highest standards Think big Bias for action Frugality Earn trust Dive deep Have backbone; disagree and commit Deliver results Strive to be earth&amp;rsquo;s best employer Success and scale bring broad responsibility Learn more about the Amazon Leadership Principles.</description></item><item><title>Avoid using toBeTruthy() and toBeFalsy() matchers</title><link>https://jsstrn.me/notes/jest-avoid-tobetruthy-tobefalsy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/jest-avoid-tobetruthy-tobefalsy/</guid><description>Test assertions should be explicit.
If I&amp;rsquo;m trying to assert that something should be true I avoid using the toBeTruthy() matcher.
It&amp;rsquo;s important to realize that in JavaScript, all values are truthy unless they are defined as falsy. This means that as long as result is not a falsy value (e.g. false, &amp;quot;&amp;quot;, null, undefined, NaN, etc.), the assertion will pass.
expect(result).toBeTruthy() // passes if result is {} or [] or 1 Contrast it with this approach where result will only pass if its value is true.</description></item><item><title>CAP Theorem</title><link>https://jsstrn.me/notes/cap-theorem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/cap-theorem/</guid><description>The CAP Theorem states that you can only provide two out of the following three guarantees:
Consistency Availability Partition tolerance Given that networks are not reliable, one of the two guarantees must always be partition tolerance. Therefore, realistically, we only have consistency and availability to choose from.</description></item><item><title>Check if a variable is null or undefined in JavaScript</title><link>https://jsstrn.me/notes/js-check-null-undefined/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-check-null-undefined/</guid><description>Use double question mark operator to check if a variable is null or undefined in JavaScript</description></item><item><title>Check the status of a Git repository</title><link>https://jsstrn.me/notes/git-status/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-status/</guid><description>To check the status of the Git repository.
git status We can see a --short or -s version with this command.
git status --short For convenience, you can add git st as an alias.
git config --global alias.st &amp;#34;status --short&amp;#34;</description></item><item><title>Clone a repository with submodules</title><link>https://jsstrn.me/notes/git-submodule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-submodule/</guid><description>Git commands are different for different versions so be sure to check your Git version.
git --version Clone a repository with submodules using the --recurse-submodules flag. This works for Git version 2.13 or higher.
git clone --recurse-submodules &amp;lt;remote-repo-url&amp;gt; If the repository has a lot of submodules, then adding the -j8 flag will fetch up to 8 submodules in parallel.
git clone --recurse-submodules -j8 &amp;lt;remote-repo-url&amp;gt; Alternatively, first clone the repository and then add the submodules.</description></item><item><title>Consistency vs. availability</title><link>https://jsstrn.me/notes/consistency-vs-availability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/consistency-vs-availability/</guid><description>Let&amp;rsquo;s consider the following scenario, Arya and Bhavani want to collaborate on an online document.
Always consistent, but not always available One approach is when one person is working on the document, the document is locked to prevent the other person from working on it at the same time. This is the approach used in WordPress.
The trade-off here is that the document remains locked as long as one person has the document opened, making it unavailable for anyone else to work on it.</description></item><item><title>Create a favicon for your site</title><link>https://jsstrn.me/notes/generate-favicon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/generate-favicon/</guid><description>Find or create a suitable favicon for your site</description></item><item><title>Create an array from range of numbers</title><link>https://jsstrn.me/notes/js-array-range/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-array-range/</guid><description>How to create an array of elements based on a range of numbers in JavaScript</description></item><item><title>Create profile photos and avatars</title><link>https://jsstrn.me/notes/create-profile-photos-avatars/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/create-profile-photos-avatars/</guid><description>Here are some resources for creating profile photos and avatars.
DiceBear Avatars Avataaars Generator Generated.photos</description></item><item><title>Difference between for...of and for...in in JavaScript</title><link>https://jsstrn.me/notes/js-for-of-vs-for-in/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-for-of-vs-for-in/</guid><description>for...of is for arrays The for...of statement iterates over values of an iterable (e.g. String, Array, Set, Map).
If we have 10 apples and we have 1 of them, we might say 1 of 10 apples. That&amp;rsquo;s one way to remember that for...of is for arrays.
const array = [&amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39;] for (const element of array) { // element =&amp;gt; &amp;#39;a&amp;#39;, &amp;#39;b&amp;#39;, &amp;#39;c&amp;#39; } for...in is for objects The for.</description></item><item><title>Dig – DNS lookup utility</title><link>https://jsstrn.me/notes/dig-dns-lookup-domain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/dig-dns-lookup-domain/</guid><description>How to check your domain&amp;rsquo;s DNS configurations</description></item><item><title>Exit a Bash script on error</title><link>https://jsstrn.me/notes/bash-exit-on-error/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/bash-exit-on-error/</guid><description>How to exit a Bash script when any command fails</description></item><item><title>Extreme Programming</title><link>https://jsstrn.me/notes/agile-extreme-programming/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/agile-extreme-programming/</guid><description>Extreme Programming (XP) adopts an iterative development process with iteration and release planning meetings centered around user stories.
XP emphasizes writing software with test driven development, pair programming, and continuous integration.
Reference Introducing Extreme Programming</description></item><item><title>Find the root of a number</title><link>https://jsstrn.me/notes/kata-root-of-number/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/kata-root-of-number/</guid><description>Question Implement a function root that calculates the n&amp;rsquo;th root of a number.
The function takes a non-negative number x and a positive integer n and returns the positive n&amp;rsquo;th root of x within an error of 0.001. Suppose the real root is y, then
|y - root(x, n)| &amp;lt; 0.001 Solution Reveal solution /* time complexity: O(n) space complexity: O(1) */ function root(x, n) { if (n === 0) { return 0; } if (n === 1) { return x; } let lower = 0; let upper = x; let guess = (upper + lower) / 2; let tolerance = 0.</description></item><item><title>Fix issues with terminal keys</title><link>https://jsstrn.me/notes/fix-issues-with-termianl-keys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/fix-issues-with-termianl-keys/</guid><description>If you encounter issues with your terminal returning odd responses to certain keys like the Enter key then you can use stty to return them to sanity.
To reset your terminal keys to sane options
stty sane</description></item><item><title>Give VPN a try with ProtonVPN</title><link>https://jsstrn.me/notes/vpn-protonvpn-free-plan/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vpn-protonvpn-free-plan/</guid><description>If you&amp;rsquo;re new to VPN services, you can use ProtonVPN&amp;rsquo;s free plan. The free version allows you to connect to over 20 servers in 3 countries with moderate speeds.
ProtonVPN is from the creators of ProtonMail.</description></item><item><title>Guidelines for building CLI tools</title><link>https://jsstrn.me/notes/cli-guidelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/cli-guidelines/</guid><description>Best practices for building CLI tools</description></item><item><title>Handling precision values in Java with BigDecimal</title><link>https://jsstrn.me/notes/java-handling-precision-values-with-bigdecimal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/java-handling-precision-values-with-bigdecimal/</guid><description>When it comes to handling values that require precision, using data types like float and double may result in unexpected behavior.
double doubleValue = 0.012; double doubleSum = doubleValue + doubleValue + doubleValue; In this example, we would expect the sum to be 0.036, but instead we get 0.036000000000000004.
This can lead to a lot of issues when we are dealing with currency conversion. For this reason, it is recommended to use BigDecimal instead.</description></item><item><title>How I created my favicon for this site</title><link>https://jsstrn.me/notes/how-i-created-my-favicon/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/how-i-created-my-favicon/</guid><description>I created my own favicon with John Sorrentino&amp;rsquo;s Favicon.io.
Here&amp;rsquo;s the settings I used to generate my favicon.
Background: Rounded Font Family: Fira Code Font Variant: Bold 700 Normal Font Size: 80 Font Color: #FFFFFF Background Color: #145DA0 I got the background color from marmaid lagoon color palette from Canva.</description></item><item><title>How to install Ruby on macOS</title><link>https://jsstrn.me/notes/ruby-install/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/ruby-install/</guid><description>How to install Ruby on macOS with Homebrew and rbenv</description></item><item><title>How to type the Control (^), Option (⌥), and Command (⌘) keys on macOS</title><link>https://jsstrn.me/notes/macos-keys-control-option-command/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/macos-keys-control-option-command/</guid><description>Here&amp;rsquo;s how you can type the Control (^), Option (⌥), and Command (⌘) keys on macOS.
Control (^) key – type Shift-6 Option (⌥) key – press Control-Command-Space and search for &amp;ldquo;option&amp;rdquo; Command (⌘) key – press Control-Command-Space and search for &amp;ldquo;place of interest&amp;rdquo;</description></item><item><title>Install VSCodium instead of VS Code</title><link>https://jsstrn.me/notes/vscode-install-vscodium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vscode-install-vscodium/</guid><description>By default, VS Code will send diagnostic data which you disable in settings. To do this, search for telemetry in settings and select off under Telemetry Level.
Another approach is to install VSCodium which contains the original open sourced binaries and has telemetry disabled by default.
For macOS, use Homebrew to install VSCodium
brew install vscodium</description></item><item><title>Installing GPG Suite on macOS</title><link>https://jsstrn.me/notes/install-gpg-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/install-gpg-tools/</guid><description>You don&amp;rsquo;t actually need to install GPG Suite. You can access all your GPG keys via the gpg command line tool via your terminal.
Installing GPG Suite gives you the GPG Keychain which makes it easier for you to view all your keys and to store your passphrase in the keychain so that you don&amp;rsquo;t have to keep typing it in all the time.
You can either download and install GPG Suite directly from their website or via Homebrew.</description></item><item><title>Interview tips from StashAway</title><link>https://jsstrn.me/notes/interview-tips-stashaway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/interview-tips-stashaway/</guid><description>These are tips for the interview process from StashAway that are also applicable with other companies.
Do your research Make sure you really understand what we do before you write your cover letter or hop on a call with us. We want to know that you’re making an intentional decision to apply to be a part of our team.
Make sure your values align with ours While technical skills are non-negotiable, we also pay a lot of attention to whether you&amp;rsquo;ll be a good cultural fit for the team.</description></item><item><title>Iterate over an array in JavaScript</title><link>https://jsstrn.me/notes/js-iterate-over-array/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-iterate-over-array/</guid><description>Using for...of This is the simplest approach to iterate over an array while still allowing you to break out of the loop.
Do not confuse with for...in which is for iterating over objects.
for (const element of array) { // your code here } Using a for loop This is the most versatile approach as it allows you to control the starting index, increment value, range, etc.
Use this approach if you&amp;rsquo;re not doing a straightforward iteration over an array.</description></item><item><title>Learn to use VS Code more efficiently</title><link>https://jsstrn.me/notes/vscode-learn-to-use-more-efficiently/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vscode-learn-to-use-more-efficiently/</guid><description>Multi-cursor editing Select your text, hit Shift-Command-L to select all occurences of the selection. Command-D to select them one at a time.
Add a new cursor above or below, Option-Command + up/down arrow keys.
Hit Escape key to exit multi-cursor mode.
IntelliSense The default shortcut key to trigger suggestions is Control-Space or Fn-Control-Space. If this does not work, try the Option-Escape keys.
Line actions To delete an entire line, hit Shift-Command-K or Command-X.</description></item><item><title>Limit number of open editors in VS Code</title><link>https://jsstrn.me/notes/vscode-set-editor-limit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vscode-set-editor-limit/</guid><description>We can limit the number of open editors in VS Code by configuring the following in settings:
workbench.editor.limit.enabled: true – enable editor limit; default is false workbench.editor.limit.value: 1 – set number of open editors; default is 10 workbench.editor.limit.perEditorGroup: true – allow side-by-side panels; default is false</description></item><item><title>Merging arrays in JavaScript without duplicates</title><link>https://jsstrn.me/notes/js-merge-arrays/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-merge-arrays/</guid><description>How to merge two or more arrays in JavaScript</description></item><item><title>Multiple cursors with Vim</title><link>https://jsstrn.me/notes/vim-multiple-cursor/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vim-multiple-cursor/</guid><description>Multiple cursor before the first character of the next couple of lines
first item second item third item last item Move your cursor to the first character in the first line. Press v to enter into visual mode Press j until all the lines you want to edit have been selected Press I to enter into insert mode at the beginning of the line Type the text you want and hit Escape My first item My second item My third item My last item</description></item><item><title>Navigation in VS Code</title><link>https://jsstrn.me/notes/vscode-code-navigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vscode-code-navigation/</guid><description>Navigation Command-P to quickly search and open a file.
Shift-Command-E to move your cursor to the Explorer pane then navigate with arrow keys, or start typing to search for a file.
Control-- to navigate to a previously opened file Shift-Control-- to navigate forward.
Breadcrumbs You can navigate anywhere within a file by clicking on the breadcrumbs.
You can also open other files directly from the breadcrumbs.
Reference Code Navigation in VS Code</description></item><item><title>Neovim</title><link>https://jsstrn.me/notes/vim-neovim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vim-neovim/</guid><description>Though Vim is open sourced, Bram Moolenaar, the creator of Vim, is the primary contributor to the project.
Neovim solves this by refactoring the code and allowing more contributors to participate in the development of the project.
For Mac users, you can install Neovim from Homebrew,
brew install neovim</description></item><item><title>PEP 20: Zen of Python</title><link>https://jsstrn.me/notes/pep-20-zen-of-python/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/pep-20-zen-of-python/</guid><description>Here&amp;rsquo;s a small sample from Zen of Python:
Beautiful is better than ugly. Explicit is better than implicit. Simple is better than complex. Complex is better than complicated. Flat is better than nested. Readability counts.</description></item><item><title>Practice with mock interviews on Pramp</title><link>https://jsstrn.me/notes/practice-mock-interviews-on-pramp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/practice-mock-interviews-on-pramp/</guid><description>In my opinion, the best way to practice for technical interviews is to do mock interviews with someone.
Pramp is the best platform for online mock interviews. They allow you to schedule a session with another anonymous user and you each take turns to interview each other.
Before the session, you are given a problem which will be used to ask your interviewee. You attempt to solve it on your own, but if you are stuck there are hints and a suggested solution.</description></item><item><title>React Query</title><link>https://jsstrn.me/notes/react-query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/react-query/</guid><description>Fetch, cache and update data in React applications</description></item><item><title>Real world applications of data structures</title><link>https://jsstrn.me/notes/data-structures-real-world-applications/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/data-structures-real-world-applications/</guid><description>Arrays Strings are represented by arrays which is why you can usually run array methods on strings Trees Document Object Model uses a tree structure to represent an HTML page Git uses a tree structure to store its commit history Databases like MongoDB use B-trees for indexing</description></item><item><title>RealWorld example applications</title><link>https://jsstrn.me/notes/real-world-app/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/real-world-app/</guid><description>The mother of all demo apps</description></item><item><title>Repeating keys stopped working in macOS</title><link>https://jsstrn.me/notes/keyboard-repeat-keys-dont-work/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/keyboard-repeat-keys-dont-work/</guid><description>I&amp;rsquo;m not sure why this happened, but at some point I lost the ability to hold down on a key to repeat them.
To solve this, run the following command in a terminal. You may need to restart the terminal for it to work.
defaults write -g ApplePressAndHoldEnabled -bool false</description></item><item><title>Reset changes in Git</title><link>https://jsstrn.me/notes/git-reset/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-reset/</guid><description>Reverting your changes in Git</description></item><item><title>Resources for technical interviews</title><link>https://jsstrn.me/notes/resources-for-technical-interview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/resources-for-technical-interview/</guid><description>Here&amp;rsquo;s a curated list of resources to help prepare you for your next technical interview.
Pramp – my personal favorite resource for mock interviews Tech Interview Handbook by Yangshun Tay Frontend Interview Handbook by Yangshun Tay Curated list of the top 75 LeetCode interview questions</description></item><item><title>Run JavaScript and TypeScript with RunJS</title><link>https://jsstrn.me/notes/javascript-typescript-scratchpad-runjs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/javascript-typescript-scratchpad-runjs/</guid><description>Often times I find myself wanting to run a bit of JavaScript code to check if it&amp;rsquo;s working properly. I do this with my notes or when I&amp;rsquo;m trying to understand something I&amp;rsquo;ve read online.
Typically, I would use the console on my browser, but that has its limitations. There are also online tools like JSFiddle, CodePen, and Replit. However, these tools tend to be geared towards frontend development with HTML and CSS, and some even require you to login just to use their service.</description></item><item><title>Run Jest tests that match a describe block</title><link>https://jsstrn.me/notes/jest-match-name-tests/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/jest-match-name-tests/</guid><description>How to run tests that only match the name in the describe block</description></item><item><title>Save your GPG key passphrase to Keychain</title><link>https://jsstrn.me/notes/gpg-save-passphrase-to-keychain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/gpg-save-passphrase-to-keychain/</guid><description>If you use your GPG key to sign your commits you will have to key in your passphrase each time you make a new commit. You can save your passphrase to Keychain with the help of Pinentry Mac.
Install pinentry-mac from Homebrew
brew install pinentry-mac Open the configuration file to your gpg-agent located at ~/.gnupg/gpg-agent.conf with vim or your favorite editor.
vim ~/.gnupg/gpg-agent.conf Add this line to set your pinentry-program to pinentry-mac</description></item><item><title>Security tools and resources</title><link>https://jsstrn.me/notes/security-tools/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/security-tools/</guid><description>Learn Awesome AppSec - curated list of resources for learning about application security Damn Vulnerable Web App (DVWA) - a vulnerable web application used for security training OWASP Juice Shop - a vulnerable web application used for security training OWASP Node Goat - a vulnerable web application used for security training with tutorials XCS100: Introduction to Web Security - a free introductory course to web security by Stanford University Offensive Security News Insecure.</description></item><item><title>Set the lower and upper bound limits of a variable in JavaScript</title><link>https://jsstrn.me/notes/js-math-min-max/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-math-min-max/</guid><description>Use Math.min() and Math.max() to set the upper and lower bound limits of a variable</description></item><item><title>Set width in CSS without media queries</title><link>https://jsstrn.me/notes/css-set-width-without-media-queries/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/css-set-width-without-media-queries/</guid><description>Let&amp;rsquo;s say I&amp;rsquo;d like to set the width of an image to 20% of the viewport width.
img { width: 20vw; } The problem now is that when we look at the website on mobile devices it appears way too small because the viewport is much smaller.
One solution might be to use media queries, but it&amp;rsquo;s actually not necessary in this case. We can actually set the min-width to be a certain value so that it will not be any smaller.</description></item><item><title>Setting up a home media server</title><link>https://jsstrn.me/notes/setting-up-home-media-server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/setting-up-home-media-server/</guid><description>NAS server If you have a NAS server, you can install Plex or Emby as your media server. Both Plex and Emby have clients for Apple TV and other devices.
Raspberry Pi If you have a Raspberry Pi, its relatively simple to turn it into a media server with OSMC and connect it directly to a TV. The downside is that you&amp;rsquo;ll need to use a keyboard to navigate around.</description></item><item><title>Shortcut key to insert emoji and symbols on macOS</title><link>https://jsstrn.me/notes/macos-emoji-and-symbols/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/macos-emoji-and-symbols/</guid><description>Just press Control-Command-Space on your keyword to open up the Emoji &amp;amp; Symbols window. Select or search for an emoji.
Click the small icon to the right of the search bar to bring up the character viewer to select more symbols.</description></item><item><title>Sign your commits</title><link>https://jsstrn.me/notes/git-sign-commits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-sign-commits/</guid><description>How to sign your Git commits with a GPG key</description></item><item><title>Sort an array of objects</title><link>https://jsstrn.me/notes/javascript-sort-array-objects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/javascript-sort-array-objects/</guid><description>We can sort an array of objects with the Array.prototype.sort().
Keep in mind that sort() sorts elements in place, which means it manipulates the original array. So you have to make a copy of the array if you want to retain the original order of the array.
const copiedArray = [...originalArray]; Let&amp;rsquo;s say you have an array of people with name and age properties.
const people = [ { name: &amp;#34;Bob&amp;#34;, age: 32, }, { name: &amp;#34;Alice&amp;#34;, age: 42, }, { name: &amp;#34;Charlie&amp;#34;, age: 22, }, ]; We can sort them alphabetically by name by having the callback function return -1, 0, or 1.</description></item><item><title>SpaceVim</title><link>https://jsstrn.me/notes/vim-spacevim/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vim-spacevim/</guid><description>SpaceVim is a Vim distribution inspired by spacemacs.
SpaceVim is not a GUI. After installing SpaceVim, it will alter the configuration of Vim and Neovim with sensible defaults.
This means that when you launch Vim or Neovim you will now get SpaceVim instead.</description></item><item><title>Squash your commits</title><link>https://jsstrn.me/notes/git-squash-commits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-squash-commits/</guid><description>It&amp;rsquo;s not uncommon to make several commits during the course of developing your feature. When it&amp;rsquo;s time to push your code you want to combine all of your commits into one logical commit.
When making pull requests and submitting code for review, it&amp;rsquo;s easier for others to view all of our changes in one commit rather than have them all scattered in numerous commits. To do this, we want to squash all our commits into one commit.</description></item><item><title>The 3-2-1 backup rule</title><link>https://jsstrn.me/notes/3-2-1-backup-rule/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/3-2-1-backup-rule/</guid><description>Create 3 copies of your data – 1 primary and 2 backup copies Have 2 types of storage mediums – e.g. hard disk drives and cloud storage Store 1 of these backups offsite – preferably on the cloud Let&amp;rsquo;s say you have some files on your computer. You want to make a backup copy of your files on an external hard disk drive and have another copy on a cloud storage.</description></item><item><title>The best online whiteboards for system design interviews</title><link>https://jsstrn.me/notes/whiteboard-for-system-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/whiteboard-for-system-design/</guid><description>While there are plenty of online whiteboards available to choose from, many of them require you to sign up for an account before you can use them. This might be suitable for collaborations with teams, but adds a layer of friction for those of us who want to use it during system design interviews.
The tools I have listed are ones that are open source and do not require creating an account to use them.</description></item><item><title>The origin of the name shebang</title><link>https://jsstrn.me/notes/shebang-origin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/shebang-origin/</guid><description>Why #! is called shebang</description></item><item><title>Types of data structures</title><link>https://jsstrn.me/notes/data-structures-types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/data-structures-types/</guid><description>In the Algorithm Design Manual, Skiena explains that there are two types of data structures – contiguous and linked data structures. Their distinction being how they are stored in memory.
Contiguous data structures are composed of a single slab of memory, and include arrays, hash tables, matrices, and heaps.
Linked data structures are composed of distinct chunks of data bound together by pointers, and include linked-lists, trees, and graphs.</description></item><item><title>UI component libraries for React</title><link>https://jsstrn.me/notes/react-component-ui/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/react-component-ui/</guid><description>Material UI Material UI is the most popular UI component library out there.
You can theme Material UI so that it doesn&amp;rsquo;t look like yet another project designed with Material Design.
There&amp;rsquo;s a store with several free and paid themes to choose from. One particularly good looking theme is Soft UI Dashboard React by Creative Tim.
Chakra UI Chakra UI is the new kid on the block, but where it lacks in maturity it makes up for in ease of use.</description></item><item><title>Use Vim-like commands in Firefox</title><link>https://jsstrn.me/notes/vim-browser-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vim-browser-extension/</guid><description>Using Vim commands allows us to reduce the number of times we need to lift our hands away from the keyboard to reach for your mouse.
While most code editors typically support Vim commands, we can&amp;rsquo;t say the same for most other applications. Luckily, with browser extensions, we are able to use Vim commands in the browser.
Install the Vim Vixen browser extension to use Vim commands.
Some useful commands to remember:</description></item><item><title>Useful Vim commands</title><link>https://jsstrn.me/notes/vim-commands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/vim-commands/</guid><description>A list of the most commonly used Vim commands</description></item><item><title>Using SSH and GPG keys</title><link>https://jsstrn.me/notes/gpg-ssh-keys/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/gpg-ssh-keys/</guid><description>With most remote Git servers such as GitHub and GitLab, you will see both SSH and GPG keys and you might be wondering what they are used for.
SSH keys SSH keys are used for authenticating with the remote Git server without you requiring to key in your username and password.
We want to associate an SSH key with your computer&amp;rsquo;s identity so generate an SSH key for each device. In the event that you lose your computer, you can revoke the SSH key and commits coming from that device will no longer be allowed.</description></item><item><title>View changes before committing</title><link>https://jsstrn.me/notes/git-commit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-commit/</guid><description>Review code changes before staging and committing</description></item><item><title>View code changes</title><link>https://jsstrn.me/notes/git-diff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/git-diff/</guid><description>View code changes with &lt;code>git diff&lt;/code></description></item><item><title>Watch for file changes as you run your tests</title><link>https://jsstrn.me/notes/jest-run-tests-watch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/jest-run-tests-watch/</guid><description>How to run your tests as your files change in Jest</description></item><item><title>What are truthy values in JavaScript?</title><link>https://jsstrn.me/notes/js-all-values-truthy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-all-values-truthy/</guid><description>In JavaScript, all values are truthy unless they are defined as falsy. Here&amp;rsquo;s a complete list of falsy values.
Any value that isn&amp;rsquo;t falsy is by definition truthy. This means that an empty array [] or an empty object {} or a negative number are all considered truthy, but an empty string &amp;quot;&amp;quot; is falsy.
Consider the following example,
const name = &amp;#34;&amp;#34;; if (!name) { // your code here } While the code above works for checking for an empty string, the same cannot be said when checking for an empty array.</description></item><item><title>Which shebang to use to run Bash scripts?</title><link>https://jsstrn.me/notes/bash-shebang/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/bash-shebang/</guid><description>Add a shebang to the top of your Bash scripts</description></item><item><title>Why you should always use strict equality</title><link>https://jsstrn.me/notes/js-equality-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://jsstrn.me/notes/js-equality-table/</guid><description>JavaScript equality table</description></item></channel></rss>